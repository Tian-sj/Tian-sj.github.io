<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Model-View结构</title>
    <link href="/2022/05/30/Model-View%E7%BB%93%E6%9E%84/"/>
    <url>/2022/05/30/Model-View%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<ul><li>数据：如数据库的一个数据表或SQL查询结果，内存中的一个 StringList，或磁盘文件结构等。</li><li>Model：与数据通信，并为视图组件提供数据接口。</li><li>View：是屏幕上的界面组件，视图从数据模型获得每个数据项的模型索引（model index），通过模型索引获取数据。</li><li>代理：定制数据的界面显示和编辑方式。在标准的视图组件中，代理功能显示一个数据，当数据被编辑时，提供一个编辑器，一般是 QLineEdit。</li></ul><pre><code class=" mermaid">flowchart TDA[数据] &lt;--&gt; B[Model]B --显示--&gt; C[View]B &lt;--编辑--&gt; D((代理))D &lt;--显示--&gt; Cstyle A stroke-dasharray: 5 5</code></pre><blockquote><p>模型、视图和代理之间使用信号和槽通信。</p></blockquote><hr><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><table><thead><tr><th>Model 类</th><th>用途</th></tr></thead><tbody><tr><td>QStringListModel</td><td>用于处理字符串列表数据的数据模型类</td></tr><tr><td>QStandardItemModel</td><td>标准的基于项数据的数据模型类，每个项数据可以是任何数据类型</td></tr><tr><td>QFileSystemModel</td><td>计算机上文件系统的数据模型类</td></tr><tr><td>QSortFilterProxyModel</td><td>与其他数据模型结合，提供排序和过滤功能的数据模型类</td></tr><tr><td>QSqlQueryModel</td><td>用于数据库SQL查询结果的数据模型类</td></tr><tr><td>QSqlTableModel</td><td>用于数据库的一个数据表的数据模型类</td></tr><tr><td>QSqlRelationalTableModel</td><td>用于关系型数据表的数据模型类</td></tr></tbody></table><pre><code class=" mermaid">graph LRQAbstractItemmodel --&gt; QAbstractListModelQAbstractListModel --&gt; QStringListModelQAbstractItemmodel --&gt; QAbstractProxyModelQAbstractProxyModel --&gt; QSortFilterProxyModelQAbstractItemmodel --&gt; QAbstractTableModelQAbstractTableModel --&gt; QSqlQueryModel --&gt; QSqlTableModel --&gt; QSqlRelationalTableModelQAbstractItemmodel --&gt; QStandardItemModelQAbstractItemmodel --&gt; QFileSystemModelstyle QAbstractItemmodel fill:#a5ab1e,color:#fffstyle QAbstractListModel fill:#a5ab1e,color:#fffstyle QAbstractProxyModel fill:#a5ab1e,color:#fffstyle QAbstractTableModel fill:#a5ab1e,color:#fffstyle QStringListModel fill:#eb5d22,color:#fffstyle QSortFilterProxyModel fill:#eb5d22,color:#fffstyle QSqlQueryModel fill:#eb5d22,color:#fffstyle QSqlTableModel fill:#eb5d22,color:#fffstyle QSqlRelationalTableModel fill:#eb5d22,color:#fffstyle QStandardItemModel fill:#eb5d22,color:#fffstyle QFileSystemModel fill:#eb5d22,color:#fff</code></pre><h4 id="视图组件：显示数据时，只需调用视图类的-setModel-函数"><a href="#视图组件：显示数据时，只需调用视图类的-setModel-函数" class="headerlink" title="视图组件：显示数据时，只需调用视图类的 setModel() 函数"></a>视图组件：显示数据时，只需调用视图类的 setModel() 函数</h4><ul><li>视图组件不存储数据</li><li>便利类则为组件的每个节点或单元格创建一个项（Item），用项存储数据、格式设置等。</li><li>便利类没有数据类型，将界面与数据绑定了。</li></ul><pre><code class=" mermaid">graph LRQAbstactItemView --&gt; QListView --&gt; QListWidgetQAbstactItemView --&gt; QTableView --&gt; QTableWidgetQAbstactItemView --&gt; QTreeView --&gt; QTreeWidgetQAbstactItemView --&gt; QColumnViewQAbstactItemView --&gt; QHeaderViewstyle QAbstactItemView fill:#a5ab1e,color:#fffstyle QListView fill:#eb5d22,color:#fffstyle QListWidget fill:#eb5d22,color:#fffstyle QTableView fill:#eb5d22,color:#fffstyle QTableWidget fill:#eb5d22,color:#fffstyle QTreeView fill:#eb5d22,color:#fffstyle QTreeWidget fill:#eb5d22,color:#fffstyle QColumnView fill:#eb5d22,color:#fffstyle QHeaderView fill:#eb5d22,color:#fff</code></pre><blockquote><p>便利类缺乏对大型数据源进行灵活处理的能力，适用于小型数据的显示和编辑。</p></blockquote><hr><h4 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h4><ul><li>代理就是在视图组件上为编辑数据提供编辑器</li><li>如在表格组件中编辑一个单元格的数据时，缺省是使用一个 QLineEdit 编辑框。代理负责从数据模型获取相应的数据，然后显示在编辑器里，修改数据后，又将其保存到数据模型中。</li><li>QAbstractItemDelegate 是所有代理类的基类，</li></ul><h4 id="Model-x2F-View结构的一些概念"><a href="#Model-x2F-View结构的一些概念" class="headerlink" title="Model&#x2F;View结构的一些概念"></a>Model&#x2F;View结构的一些概念</h4><blockquote><p>数据模型中存储数据的基本单元都是项（Item），每个项有一个行号、一个列号，还有一个父项</p></blockquote><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/Model-View%E7%BB%93%E6%9E%84/1.png"></p><p>QModelIndex 表示模型索引的类。模型索引提供数据存取的一个临时指针。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// Table Model</span><br>QModelIndex indexA = model-&gt;<span class="hljs-built_in">index</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-built_in">QModelIndex</span>());<br>QModelIndex indexC = model-&gt;<span class="hljs-built_in">index</span>(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-built_in">QModelIndex</span>());<br><span class="hljs-comment">// Tree Model</span><br>QModelIndex indexB = model-&gt;<span class="hljs-built_in">index</span>(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, indexA);<br></code></pre></td></tr></table></figure><h4 id="项的角色：在为数据模型的一个项设置数据时，可以赋予其不同项的角色的数据。"><a href="#项的角色：在为数据模型的一个项设置数据时，可以赋予其不同项的角色的数据。" class="headerlink" title="项的角色：在为数据模型的一个项设置数据时，可以赋予其不同项的角色的数据。"></a>项的角色：在为数据模型的一个项设置数据时，可以赋予其不同项的角色的数据。</h4><p>模型中的每个项都有一组与其关联的数据元素，每个元素都有自己的角色。视图使用这些角色向模型指示它需要哪种类型的数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">QStandardItem::setData</span><span class="hljs-params">(<span class="hljs-type">const</span> QVariant&amp; value, <span class="hljs-type">int</span> role = Qt::UserRole + <span class="hljs-number">1</span>)</span></span>;<br><br><span class="hljs-function">QVariant <span class="hljs-title">QStandardItem::data</span><span class="hljs-params">(<span class="hljs-type">int</span> role = Qt::UserRole + <span class="hljs-number">1</span>)</span> <span class="hljs-type">const</span></span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
      <category>Qt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>C++</tag>
      
      <tag>Qt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Qt6 ItemFlags</title>
    <link href="/2022/05/25/Qt6-ItemFlags/"/>
    <url>/2022/05/25/Qt6-ItemFlags/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="left">Constant</th><th align="center">Value</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">Qt::NoItemFlags</td><td align="center">0</td><td align="left">它没有设置任何属性。</td></tr><tr><td align="left">Qt::ItemIsSelectable</td><td align="center">1</td><td align="left">它可以被选中。</td></tr><tr><td align="left">Qt::ItemIsEditable</td><td align="center">2</td><td align="left">它可以被编辑。</td></tr><tr><td align="left">Qt::ItemIsDragEnabled</td><td align="center">4</td><td align="left">它可以被拖动。</td></tr><tr><td align="left">Qt::ItemIsDropEnabled</td><td align="center">8</td><td align="left">它可以用作放置目标。</td></tr><tr><td align="left">Qt::ItemIsUserCheckable</td><td align="center">16</td><td align="left">它可以由用户选中或取消选中。</td></tr><tr><td align="left">Qt::ItemIsEnabled</td><td align="center">32</td><td align="left">用户可以与项目交互。</td></tr><tr><td align="left">Qt::ItemIsAutoTristate</td><td align="center">64</td><td align="left">项目的状态取决于其子项的状态。这使得<a href="https://doc.qt.io/qt-6/qtreewidget.html">QTreeWidget</a>中的父项的状态可以自动管理（如果所有的子项都被选中，则为选中；如果所有的子项都未被选中，则为未选中；如果只有一些子项被选中，则为部分选中）。</td></tr><tr><td align="left">Qt::ItemNeverHasChildren</td><td align="center">128</td><td align="left">该项目永远不会有子项目。这仅用于优化目的。</td></tr><tr><td align="left">Qt::ItemIsUserTristate</td><td align="center">256</td><td align="left">用户可以循环通过三个不同的状态。这个值是在 Qt 5.5 中添加的。</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
      <category>Qt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>C++</tag>
      
      <tag>Qt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QComBox和QPlainTextEdit</title>
    <link href="/2022/05/14/QComBox%E5%92%8CQPlainTextEdit/"/>
    <url>/2022/05/14/QComBox%E5%92%8CQPlainTextEdit/</url>
    
    <content type="html"><![CDATA[<ul><li><h3 id="Qplain-TextEdit的文字内容以QTextDocument类型存储，函数document返回这个文档对象的指针。"><a href="#Qplain-TextEdit的文字内容以QTextDocument类型存储，函数document返回这个文档对象的指针。" class="headerlink" title="Qplain TextEdit的文字内容以QTextDocument类型存储，函数document返回这个文档对象的指针。"></a>Qplain TextEdit的文字内容以QTextDocument类型存储，函数document返回这个文档对象的指针。</h3></li><li><h3 id="QTextDocument是内存中的文本对象，以文本块的方式存储，每个段落以换行符结束"><a href="#QTextDocument是内存中的文本对象，以文本块的方式存储，每个段落以换行符结束" class="headerlink" title="QTextDocument是内存中的文本对象，以文本块的方式存储，每个段落以换行符结束"></a>QTextDocument是内存中的文本对象，以文本块的方式存储，每个段落以换行符结束</h3></li><li><h3 id="QTextDocument提供一些函数实现对文本内容的存取"><a href="#QTextDocument提供一些函数实现对文本内容的存取" class="headerlink" title="QTextDocument提供一些函数实现对文本内容的存取"></a>QTextDocument提供一些函数实现对文本内容的存取</h3><ul><li>int blockCount(), 返回文本块个数</li><li>QTextBlock finBlockByNumber(int ), 读取一个文本块，序号从0开始</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
      <category>Qt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>C++</tag>
      
      <tag>Qt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Qt中字符串与数值之间的转换</title>
    <link href="/2022/05/12/Qt%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%80%BC%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
    <url>/2022/05/12/Qt%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%80%BC%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="QString-类从字符串转换为整数的函数有："><a href="#QString-类从字符串转换为整数的函数有：" class="headerlink" title="QString 类从字符串转换为整数的函数有："></a>QString 类从字符串转换为整数的函数有：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// base = 10, 表示十进制，默认什么都不输入就是十进制的</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">toInt</span><span class="hljs-params">(<span class="hljs-type">bool</span>* ok = Q_NULLPTR, <span class="hljs-type">int</span> base = <span class="hljs-number">10</span>)</span></span><br><span class="hljs-function"><span class="hljs-type">const</span> <span class="hljs-type">long</span> <span class="hljs-title">toLong</span><span class="hljs-params">(<span class="hljs-type">bool</span>* ok = Q_NULLPTR, <span class="hljs-type">int</span> base = <span class="hljs-number">10</span>)</span></span><br><span class="hljs-function"><span class="hljs-type">const</span> <span class="hljs-type">short</span> <span class="hljs-title">toShort</span><span class="hljs-params">(<span class="hljs-type">bool</span>* ok = Q_NULLPTR, <span class="hljs-type">int</span> base = <span class="hljs-number">10</span>)</span></span><br><span class="hljs-function"><span class="hljs-type">const</span> uint <span class="hljs-title">toUInt</span><span class="hljs-params">(<span class="hljs-type">bool</span>* ok = Q_NULLPTR, <span class="hljs-type">int</span> base = <span class="hljs-number">10</span>)</span></span><br><span class="hljs-function"><span class="hljs-type">const</span> ulong <span class="hljs-title">toULong</span><span class="hljs-params">(<span class="hljs-type">bool</span>* ok = Q_NULLPTR, <span class="hljs-type">int</span> base = <span class="hljs-number">10</span>)</span> <span class="hljs-type">const</span></span><br></code></pre></td></tr></table></figure><hr><h2 id="QString-将字符串转换为浮点数的函数有："><a href="#QString-将字符串转换为浮点数的函数有：" class="headerlink" title="QString 将字符串转换为浮点数的函数有："></a>QString 将字符串转换为浮点数的函数有：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">toDouble</span><span class="hljs-params">(<span class="hljs-type">bool</span>* ok = Q_NULLPTR)</span> <span class="hljs-type">const</span></span><br><span class="hljs-function"><span class="hljs-type">float</span> <span class="hljs-title">toFloat</span><span class="hljs-params">(<span class="hljs-type">bool</span>* ok = Q_NULLPTR)</span> <span class="hljs-type">const</span></span><br></code></pre></td></tr></table></figure><blockquote><p>希望显示两位小数，下面4行语句都可以实现这个功能：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++">str = QString::<span class="hljs-built_in">number</span>(total, <span class="hljs-string">&#x27;f&#x27;</span>, <span class="hljs-number">2</span>);<br>str = QString::<span class="hljs-built_in">asprintf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>, total);<br>str = str.<span class="hljs-built_in">setNum</span>(total, <span class="hljs-string">&#x27;f&#x27;</span>, <span class="hljs-number">2</span>);<br>str = str.<span class="hljs-built_in">sprintf</span>(<span class="hljs-string">&quot;%.2f&quot;</span>, total);<br></code></pre></td></tr></table></figure></blockquote><hr><h2 id="QString-进制之间的相互转换"><a href="#QString-进制之间的相互转换" class="headerlink" title="QString 进制之间的相互转换"></a>QString 进制之间的相互转换</h2><p>以2进制为例</p><ul><li><p>QString 转 int</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++">QString str = <span class="hljs-string">&quot;50&quot;</span>;<br><span class="hljs-type">bool</span> ok;<br><span class="hljs-type">int</span> value = str.<span class="hljs-built_in">toInt</span>(&amp;ok);<br><span class="hljs-built_in">qDebug</span>() &lt;&lt; value;<span class="hljs-comment">// 引入头文件 #include &lt;QDebug&gt;</span><br></code></pre></td></tr></table></figure><p>输出50</p></li><li><p>int 转 2进制 QString ,两种方式，任选其一</p><ul><li><p>第一种：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">int</span> value = <span class="hljs-number">50</span>;<br>QString str = QString::<span class="hljs-built_in">number</span>(value, <span class="hljs-number">2</span>);<span class="hljs-comment">// 转换为2进制存入str中</span><br><span class="hljs-built_in">qDebug</span>() &lt;&lt; str;<br></code></pre></td></tr></table></figure><p>输出110010</p></li><li><p>第二种：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">int</span> value = <span class="hljs-number">50</span>;<br>QString str;<br>str = str.<span class="hljs-built_in">setNum</span>(value, <span class="hljs-number">2</span>);<br><span class="hljs-built_in">qDebug</span>() &lt;&lt; str;<br></code></pre></td></tr></table></figure><p>输出110010</p></li></ul></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
      <category>Qt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>C++</tag>
      
      <tag>Qt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpinBox的使用</title>
    <link href="/2022/05/10/SpinBox%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/05/10/SpinBox%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="QSpinBox-和-QDoubleSpinBox-都是-QAbstractSpinBox-的子类"><a href="#QSpinBox-和-QDoubleSpinBox-都是-QAbstractSpinBox-的子类" class="headerlink" title="QSpinBox 和 QDoubleSpinBox 都是 QAbstractSpinBox 的子类"></a>QSpinBox 和 QDoubleSpinBox 都是 QAbstractSpinBox 的子类</h3><table><thead><tr><th><strong>属性名称</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>prefix</td><td>数字显示的前缀，例如”$“</td></tr><tr><td>suffix</td><td>数字显示的后缀，例如”Kg“</td></tr><tr><td>minimum</td><td>数值范围的最小值，如0</td></tr><tr><td>maximum</td><td>数值范围的最大值，如255</td></tr><tr><td>singlestep</td><td>单击右侧上下调整按钮时的单步改变值，如设置为1，或0.1</td></tr><tr><td>value</td><td>当前显示的值</td></tr><tr><td>displayIntegerBase</td><td>QSpinBox 特有属性，显示整数使用的进制，例如2就表示二进制</td></tr><tr><td>decimals</td><td>QDoubliSpinBox 特有属性，显示数值的小数位数，例如2就显示两位小数</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
      <category>Qt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>C++</tag>
      
      <tag>Qt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QString的常用功能</title>
    <link href="/2022/05/10/QString%E7%9A%84%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD/"/>
    <url>/2022/05/10/QString%E7%9A%84%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="append-和-prepend"><a href="#append-和-prepend" class="headerlink" title="append() 和 prepend()"></a>append() 和 prepend()</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++">QString str1 = <span class="hljs-string">&quot;卖&quot;</span>, str2 = <span class="hljs-string">&quot;拐&quot;</span>;<br>QString str3 = str1;<br>str1.<span class="hljs-built_in">append</span>(str2);<span class="hljs-comment">// str1 = &quot;卖拐&quot;</span><br>str3.<span class="hljs-built_in">prepend</span>(str2); <span class="hljs-comment">// str3 = &quot;拐卖&quot;</span><br></code></pre></td></tr></table></figure><hr><h3 id="toUpper-和-toLower"><a href="#toUpper-和-toLower" class="headerlink" title="toUpper() 和 toLower()"></a>toUpper() 和 toLower()</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">QString str1 = <span class="hljs-string">&quot;Hello, World&quot;</span>, str2;<br>str2 = str1.<span class="hljs-built_in">toUpper</span>();<span class="hljs-comment">// str2 = &quot;HELLO, WORLD&quot;</span><br>str2 = str1.<span class="hljs-built_in">toLower</span>();<span class="hljs-comment">// str2 = &quot;hello, world&quot;</span><br></code></pre></td></tr></table></figure><hr><h3 id="count-、size-和-length"><a href="#count-、size-和-length" class="headerlink" title="count()、size() 和 length()"></a>count()、size() 和 length()</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++">QString str1 = <span class="hljs-string">&quot;NI好&quot;</span>;<br>N = str1.<span class="hljs-built_in">count</span>();<span class="hljs-comment">// N = 3</span><br>N = str1.<span class="hljs-built_in">size</span>();<span class="hljs-comment">// N = 3</span><br>N = str1.<span class="hljs-built_in">length</span>();<span class="hljs-comment">// N = 3</span><br></code></pre></td></tr></table></figure><hr><h3 id="trimmed-和-simplified"><a href="#trimmed-和-simplified" class="headerlink" title="trimmed() 和 simplified()"></a>trimmed() 和 simplified()</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">QString str1 = <span class="hljs-string">&quot; Are   you   OK? &quot;</span>, str2;<br>str2 = str1.<span class="hljs-built_in">trimmed</span>();<span class="hljs-comment">// str2 = &quot;Are   you   OK?&quot;</span><br>str2 = str1.<span class="hljs-built_in">simplified</span>();<span class="hljs-comment">// str2 = &quot;Are you OK?&quot;</span><br></code></pre></td></tr></table></figure><hr><h3 id="indexOf-和-lastIndexOf"><a href="#indexOf-和-lastIndexOf" class="headerlink" title="indexOf() 和 lastIndexOf()"></a>indexOf() 和 lastIndexOf()</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// int indexOf(const QString&amp; str, int form = 0, Qt::CaseSensitivity cs =</span><br><span class="hljs-comment">//Qt::CaseSensitive) const</span><br>QString str1 = <span class="hljs-string">&quot;G:\Qt6Book\QT6.3Study\qw.cpp&quot;</span>;<br>N = str1.<span class="hljs-built_in">indexOf</span>(<span class="hljs-string">&quot;6.3&quot;</span>);<span class="hljs-comment">// N = 13</span><br>N = str1.<span class="hljs-built_in">lastIndexOf</span>(<span class="hljs-string">&quot;\\&quot;</span>);<span class="hljs-comment">// N = 21  &#x27;//&#x27;第一个/表示转换符</span><br></code></pre></td></tr></table></figure><hr><h3 id="isNull-和-isEmpty"><a href="#isNull-和-isEmpty" class="headerlink" title="isNull() 和 isEmpty()"></a>isNull() 和 isEmpty()</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">QString str1, str2 = <span class="hljs-string">&quot;&quot;</span>;<br>N = str1.<span class="hljs-built_in">isNull</span>();<span class="hljs-comment">// N = true 未赋值字符串变量</span><br>N = str2.<span class="hljs-built_in">isNull</span>();<span class="hljs-comment">// N = false 只有&quot;\0&quot;的字符串，也不是Null</span><br>N = str1.<span class="hljs-built_in">isEmpty</span>();<span class="hljs-comment">// N = true</span><br>N = str2.<span class="hljs-built_in">isEmpty</span>();<span class="hljs-comment">// N = true</span><br></code></pre></td></tr></table></figure><blockquote><p>QString 只要赋值，就会在字符串的末尾自动加上”\0”，所以，如果只是要判断字符串内容是否为空，常用 isEmpty().</p></blockquote><hr><h3 id="contais"><a href="#contais" class="headerlink" title="contais()"></a>contais()</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++">QString str1 = <span class="hljs-string">&quot;G:\Qt6Book\QT6.3Study\qw.cpp&quot;</span>;<br>N = str1.<span class="hljs-built_in">contains</span>(<span class="hljs-string">&quot;.cpp&quot;</span>, Qt::CaseInsensitive);<br><span class="hljs-comment">// N = true, 不区分大小写</span><br><br>N = str1.<span class="hljs-built_in">contains</span>(<span class="hljs-string">&quot;.CPP&quot;</span>, Qt::CaseSensitive);<br><span class="hljs-comment">// N = false, 区分大小写</span><br></code></pre></td></tr></table></figure><hr><h3 id="endsWith-和-startsWith"><a href="#endsWith-和-startsWith" class="headerlink" title="endsWith() 和 startsWith()"></a>endsWith() 和 startsWith()</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++">QString str2, str1 = <span class="hljs-string">&quot;学生姓名，男，1984-3-4，汉族，山东&quot;</span>;<br>N = str1.<span class="hljs-built_in">indexOf</span>(<span class="hljs-string">&quot;,&quot;</span>);<span class="hljs-comment">// N = 4, 第一个&quot;,&quot;出现的位置</span><br>str2 = str1.<span class="hljs-built_in">left</span>(N);<span class="hljs-comment">// str2 = &quot;学生姓名&quot;</span><br>N = str1.<span class="hljs-built_in">lastIndexOf</span>(<span class="hljs-string">&quot;,&quot;</span>); <span class="hljs-comment">// N = 18, 最后一个逗号的位置</span><br>str2 = str1.<span class="hljs-built_in">right</span>(str1.<span class="hljs-built_in">size</span>() - N - <span class="hljs-number">1</span>);<br><span class="hljs-comment">// str2 = &quot;山东&quot;， 提取最后一个逗号之后的字符串</span><br></code></pre></td></tr></table></figure><hr><h3 id="section"><a href="#section" class="headerlink" title="section()"></a>section()</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// QString section(const QString&amp; sep, int start, int end = -1,</span><br><span class="hljs-comment">//               SectionFlags flags = SectionDefault) const</span><br><br>QString str2, str1 = <span class="hljs-string">&quot;学生姓名，男，1084-3-4，汉族，山东&quot;</span>;<br>str2 = str1.<span class="hljs-built_in">section</span>(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-comment">// str2 = &quot;学生姓名&quot;, 第1段的编号为0</span><br>str2 = str1.<span class="hljs-built_in">section</span>(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);<span class="hljs-comment">// str2 = &quot;男&quot;</span><br>str2 = str1.<span class="hljs-built_in">section</span>(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<span class="hljs-comment">// str2 = &quot;学生姓名，男&quot;</span><br>str2 = str1.<span class="hljs-built_in">section</span>(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>);<span class="hljs-comment">// str2 = &quot;山东&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
      <category>Qt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>C++</tag>
      
      <tag>Qt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL安装方法，支持所有版本</title>
    <link href="/2022/05/10/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/"/>
    <url>/2022/05/10/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<blockquote><p>之前安装mysql不是中文乱码，就是一段时间之后用不了，需要重新卸载、安装，太麻烦了，下面的方法直接解决乱码等，话不多说，直接开干</p></blockquote><h2 id="官网下载MySQL"><a href="#官网下载MySQL" class="headerlink" title="官网下载MySQL"></a><a href="https://dev.mysql.com/downloads/mysql/">官网下载</a>MySQL</h2><ul><li><h3 id="最新版本下载"><a href="#最新版本下载" class="headerlink" title="最新版本下载"></a>最新版本下载</h3><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/1.png"></p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/4.png"></p></li><li><h3 id="其他版本请点击Looking-for-previous-GA-versions"><a href="#其他版本请点击Looking-for-previous-GA-versions" class="headerlink" title="其他版本请点击Looking for previous GA versions?"></a>其他版本请点击Looking for previous GA versions?</h3><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/2.png" alt=""></p><ul><li>64位选择红色，32位选择绿色</li></ul></li></ul><p> <img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/3.png"></p><p>  <img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/4.png"></p><hr><h2 id="下载完成后解压"><a href="#下载完成后解压" class="headerlink" title="下载完成后解压"></a>下载完成后解压</h2><ul><li>解压之后的样子</li></ul><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/5.png"></p><hr><h2 id="配置my-ini文件"><a href="#配置my-ini文件" class="headerlink" title="配置my.ini文件"></a>配置my.ini文件</h2><ul><li><p>解压之后的目录中没有my.ini，需要自己建，写入以下配置</p><p>注意<font color="red"><code>basedir</code></font>和<font color="red"><code>datadir</code></font>中写自己MySQL的存放路径,不用自己建立Data文件夹</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-comment"># 设置3306端口</span><br><span class="hljs-attr">port</span>=<span class="hljs-number">3306</span><br><span class="hljs-comment"># 设置mysql的安装目录</span><br><span class="hljs-attr">basedir</span>=E:\mysql-<span class="hljs-number">5.7</span>.<span class="hljs-number">38</span>-winx64<br><span class="hljs-comment"># 设置mysql数据库的数据的存放目录</span><br><span class="hljs-attr">datadir</span>=E:\mysql-<span class="hljs-number">5.7</span>.<span class="hljs-number">38</span>-winx64\Data<br><span class="hljs-comment"># 允许最大连接数</span><br><span class="hljs-attr">max_connections</span>=<span class="hljs-number">200</span><br><span class="hljs-comment"># 允许连接失败的次数。</span><br><span class="hljs-attr">max_connect_errors</span>=<span class="hljs-number">10</span><br><span class="hljs-comment"># 服务端使用的字符集默认为utf8mb4</span><br><span class="hljs-attr">character-set-server</span>=utf8mb4<br><span class="hljs-comment"># 创建新表时将使用的默认存储引擎</span><br><span class="hljs-attr">default-storage-engine</span>=INNODB<br><span class="hljs-comment"># 默认使用“mysql_native_password”插件认证</span><br><span class="hljs-comment">#mysql_native_password</span><br><span class="hljs-attr">default_authentication_plugin</span>=mysql_native_password<br><span class="hljs-section">[mysql]</span><br><span class="hljs-comment"># 设置mysql客户端默认字符集</span><br><span class="hljs-attr">default-character-set</span>=utf8mb4<br><span class="hljs-section">[client]</span><br><span class="hljs-comment"># 设置mysql客户端连接服务端时默认使用的端口</span><br><span class="hljs-attr">port</span>=<span class="hljs-number">3306</span><br><span class="hljs-attr">default-character-set</span>=utf8mb4<br></code></pre></td></tr></table></figure><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/6.png"></p></li></ul><hr><h2 id="添加系统环境变量"><a href="#添加系统环境变量" class="headerlink" title="添加系统环境变量"></a>添加系统环境变量</h2><ul><li><p>右键此电脑，点击属性</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/8.png"></p></li><li><p>翻到下面点击高级系统设置</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/14.png"></p></li><li><p>点击环境变量</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/15.png"></p></li><li><p>双击系统变量下的Path</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/16.png"></p></li><li><p>弹出框中点击新建</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/17.png"></p></li><li><p>输入自己MySQL存放目录下的bin目录</p><p><font color="red">注意!</font>一定输入自己MySQL下bin的存放目录</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/18.png"></p></li><li><p>最后点击确定即可</p></li></ul><hr><h2 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h2><ul><li><p>为了避免权限问题，请以管理员运行CMD</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/7.png"></p></li><li><p>执行以下命令:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">mysqld <span class="hljs-literal">--initialize</span> <span class="hljs-literal">--console</span><br></code></pre></td></tr></table></figure><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/9.png"></p><blockquote><p><font color="red">注意！</font>Pbm7&amp;PibYBEZ是服务器为root@localhost生成的临时密码</p><p>每个人生成的临时密码都不相同(不要复制粘贴我生成的密码)，密码没有空格，其他符号都有可能出现</p><p><font color="orange">如果安装出现mysqld.exe 系统错误，由于找不到msvcp140.dll异常的解决</font></p><p>是因为缺少微软运行所需的库。百度找到下载源安装一下（可能需要重启）</p></blockquote></li></ul><hr><h2 id="安装、启动MySQL服务"><a href="#安装、启动MySQL服务" class="headerlink" title="安装、启动MySQL服务"></a>安装、启动MySQL服务</h2><ul><li><h3 id="安装MySQL服务"><a href="#安装MySQL服务" class="headerlink" title="安装MySQL服务"></a>安装MySQL服务</h3><p>执行以下命令</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">mysqld <span class="hljs-attr">--install</span> <span class="hljs-selector-attr">[服务名]</span><br></code></pre></td></tr></table></figure><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/10.png"></p><p>这样代表成功了！</p><blockquote><p>如果出现下面这个</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/11.png"></p><p>代表你之前安装的MySQL的服务没有删除</p><p>以管理员运行CMD，输入以下命令</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">sc <span class="hljs-keyword">delete</span> mysql<br></code></pre></td></tr></table></figure><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/12.png"></p><p>删除成功!</p></blockquote></li><li><h3 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a>启动MySQL服务</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> mysql<br></code></pre></td></tr></table></figure><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/13.png"></p></li></ul><hr><h2 id="修改登录密码"><a href="#修改登录密码" class="headerlink" title="修改登录密码"></a>修改登录密码</h2><ul><li><p>输入以下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">mysql <span class="hljs-literal">-u</span> root <span class="hljs-literal">-p</span><br></code></pre></td></tr></table></figure><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/19.png"></p></li><li><p>输入服务器生成的临时密码回车</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%89%88%E6%9C%AC/20.png"></p><p>出现这个页面代表成功进入mysql</p></li><li><p>输入以下命令修改密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;新密码&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>密码修改成功后输入以下命令退出mysql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">exit;<br></code></pre></td></tr></table></figure></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>安装</tag>
      
      <tag>部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vim windows 下使用全指南 (环境配置，插件推荐，美化)</title>
    <link href="/2022/05/09/Vim%E4%BD%BF%E7%94%A8%E5%85%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2022/05/09/Vim%E4%BD%BF%E7%94%A8%E5%85%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<p><font color="red" size="4"><strong>提示1：本文主要讲解了Windows下Vim的使用，配置，美化与使用Vim写C++,Python,MarkDown,R。其他语言的插件很不清楚</strong></font></p><p><font color="red" size="4"><strong>提示2：Vim是一款工具，使用Vim是为了加快您的Coding效率的，不要配置比使用的时间还长(虽然很好玩)</strong></font></p><p><font color="red" size="4"><strong>提示3：我想把这篇文章写的尽量的长，目的是帮助更多同学绕过Vim配置中的诸多天坑，请耐心观看，毕竟这要比你用一个星期去配置Vim来的快很多</strong></font></p><p><font color="red" size="4"><strong>提示4：Manjarol来的先读16节</strong></font></p><hr><h1 id="0-为什么要写这篇文章"><a href="#0-为什么要写这篇文章" class="headerlink" title="0.为什么要写这篇文章"></a>0.为什么要写这篇文章</h1><p>由于依赖win下的很多软件，不方便直接切换到Linux，但是关于Win下的<a href="https://so.csdn.net/so/search?q=vim&spm=1001.2101.3001.7020">vim</a>使用说明与参考太少了，自己摸索了一段时间，斗胆分享一下，还请老哥们指教<br>以下是我目前的工作环境</p><p><img src="https://img-blog.csdnimg.cn/20200716201211338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200716201354268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><hr><h1 id="1-Vim的简介"><a href="#1-Vim的简介" class="headerlink" title="1.Vim的简介"></a>1.Vim的简介</h1><p>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。他可以让你手不离键盘的完成鼠标的所有操作，同时vim不依赖上下左右方向键</p><p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。</p><p>Vim是一个开源项目，所以显然Vim是免费的，由于Vim具有诸多小弊端，逐渐演变出一些分支软件比如NeoVim，但是可能Bug有点多，而且如果您排除了一切问题正常使用了Vim，换用NeoVim只需把配置文件复制一份到NeoVim的安装目录下即可。同时Vim的原作者也在努力补短板，所以我们仍然建议您学习Vim</p><hr><h1 id="2-Vim的起源"><a href="#2-Vim的起源" class="headerlink" title="2.Vim的起源"></a>2.Vim的起源</h1><blockquote><p>以下内容摘自<a href="https://www.oschina.net/translate/where-vim-came-from">开源中国</a>，不感兴趣可以跳过，但是我认为挺有趣的</p></blockquote><p>我最近无意中发现一个名为Intel HEX的文件格式。据我所知，Intel HEX文件（使用.hex后缀）是通过将二进制文件变为十六进制数据来降低它的不可读性。明显它们由那些编写微控制器程序或者将数据刻录到ROM中的人使用。无论如何，当我首次使用Vim打开一个十六进制文件，我感到震惊。至少对我来说，这种文件格式非常深奥，但是Vim已经对其了如指掌。每行十六进制文件都分成不同区域——Vim已经先一步为每一个字段都标记了不同的颜色。set ft? 我敬畏地问道。filetype-hex，Vim得意地回答。</p><p>Vim无处不在。这么多人都在使用它，像对十六进制文件的支持并不值得惊讶。Vim是Mac OS的预装程序，而且在Linux世界广泛应用。它甚至对讨厌它的人来说都很熟悉，由于很多热门的命令行工具都默认让用户进入Vim，以至于那些未入门的人会被困到Vim中，这已经变成了一个热门问题。有一些主流网站，包括Facebook，当你按下j键之后，页面会滚到下面，而当按下k键则会滚到上面——Vim在数字文化中的广泛传播达到了意想不到的程度。</p><p>Vim仍然很神秘。例如，它不像React，每个人都知道它是由Facebook开发和维护的，Vim没有明确的作者。尽管它是如此的普遍和重要，却没有任何类型的委员会或组织来为Vim做决策。你可能花了几分钟来浏览Vim网站，但是却找不到关于谁创建了Vim或者为什么创造它的有效信息。如果你启动Vim时没有提供文件参数，你会看到Vim的启动信息，说的是Vim是由“Bram Moolenaar等人”开发的。但是没有更多信息。谁是Bram Moolenaar，他的神秘同盟都有谁？</p><p>当我们在提问的时候，也许更重要的是，为什么退出Vim需要输入:wq？没错，这是一个“写(write)”操作，后面还跟了一个“退出(quit)”操作，但是这并不是一个特别直观的惯例。谁来决定当复制文本的时候应该调用“复制命令（yanking）”？为什么:%s&#x2F;foo&#x2F;bar&#x2F;gc是“查找并替换”的缩写？Vim的用法太随意了，看起来没有好好决策，但是它们到底源于何处？</p><p>情况往往如此，问题答案源自于古老的计算机构，贝尔实验室。从某种意义上来说，Vim只是一个软件——名为“wq文件编辑器”——的最新版本，它从Unix时代开始已经持续开发并完善。</p><h2 id="2-1-Ken-Thompson-写了一个行编辑器-Line-Editor"><a href="#2-1-Ken-Thompson-写了一个行编辑器-Line-Editor" class="headerlink" title="2.1 Ken Thompson 写了一个行编辑器(Line Editor)"></a>2.1 Ken Thompson 写了一个行编辑器(Line Editor)</h2><p>1966年，贝尔实验室骋请了 Ken Thompson。Thompson 刚刚在加州大学伯克利分校获得了电子工程和计算机科学硕士学位。在那里，他使用了一个叫 QED 的文件编辑器，这是为 1965 年至 1966 年间的伯克利分时系统编写的。1Thompson 抵达贝尔实验室后所做的第一件事就是为麻省理工学院兼容的分时系统重写了 QED。后来他为 Multics 项目编写了另一个版本的 QED。在此过程中，他扩展了程序，以便用户可以搜索文件中的行并使用正则表达式进行替换。2</p><p>Multics 项目，跟伯克利分时系统(Berkeley Timesharing System)一样，旨在创建一个商业上可行的分时操作系统，由麻省理工学院、通用电气和贝尔实验室之间协作进行。AT＆T 最终认为该项目前途堪忧而选择退出。Thompson 和贝尔实验室的研究员 Dennis Ritchie，当时没有访问分时系统的权限，失去了这种系统带来的“交互式计算感”，于是着手创建自己的版本，最终在 1969 年 8 月被称为 Unix 3。当时他的妻子和年少的儿子正在加里福尼亚度假，Thompson 将新系统的基本组件整合到一起，分配开发操作系统、shell、编辑器、汇编程序的时间为每周一项。4</p><p>编辑器被命名为 ed。它基于 QED，但不是一个完全的重新实现。Thompson 决定放弃某些 QED 特性。对正则表达式的支持被削减，因此只能理解相对简单的正则表达式。QED 允许用户通过打开多个缓冲区并同时编辑多个文件，但是 ed 同时只能使用一个缓冲区工作。而且 QED 可以执行一个包含命令的缓冲区，而 ed 则不会这样做。这些简化是需要的。Dennis Ritchie 表示，没有 QED 的高级正则表达式并“没有太大的损失”。5</p><p>ed 现在是 POSIX 规范的一部分，所以如果你有一个符合 POSIX 标准的系统，你可以将它安装到你的计算机上。这值得一试，因为许多 ed 的命令都是今天的 Vim 的一部分。举例来说，为了将缓冲区的内容写入磁盘，你需要使用 w 命令；为了退出编辑器，你需要使用 q 命令。这两个命令可以同时写到同一行 —— 即 wq。与 Vim 相似，ed 是一个模态编辑器；从命令模式进入输入模式，你可以使用插入命令（i），追加命令（a），或者修改命令（c），取决于你要怎样去改变你的文本。ed 也引入了 s&#x2F;foo&#x2F;bar&#x2F;g 的语法，用来查找和替换，或者“替换”文本。</p><p>有这么多的相似之处，你可能认为一般的 Vim 用户使用 ed 也没问题。不过 ed 在其它一些重要方面却一点也不像 Vim。ed 是一个真正的行编辑器。它是在电传打印机的时代编写并广泛使用的。当 Ken Thompson 和 Dennis Ritchie 在 Unix 上进行编码时，他们看起来是这样的：</p><p><img src="https://img-blog.csdnimg.cn/20200716202141725.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70#pic_center"></p><p>ed 不允许你在打开的缓冲区中的其它行之间进行编辑和移动光标，因为每次对其进行更改时，ed 都需要重新打印整个文件。1969 年的 ed 还没有清空整个屏幕内容的机制，因为那时的屏幕是一张纸，而且所有需要被打印的将会使用墨水打印。如果有必要，你可以使用列表命令（l）告诉 ed 打印出一系列的行，但大部分时间你都在操作你看不到的文字。因此，使用 ed 有点像带着一个不怎么亮的灯在一所黑暗的房子里试图找到一条路径。你只能一次看到这么多，所以你必须尽力记住一切都在哪里。</p><p>这里有一个 ed 会话的例子。我已经添加了注释（在＃号之后的）来解释每一行的目的，如果这些注释被实际输入到了 ed，则不会将它们识别为注释，而且可能会出错：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs applescript">[sinclairtarget <span class="hljs-number">09</span>:<span class="hljs-number">49</span> ~]$ ed<br>i                           <span class="hljs-comment"># Enter input mode</span><br>Hello world!<br><br>Isn&#x27;t <span class="hljs-keyword">it</span> a nice <span class="hljs-built_in">day</span>?<br>.                           <span class="hljs-comment"># Finish input</span><br><span class="hljs-number">1</span>,<span class="hljs-number">2</span>l                        <span class="hljs-comment"># List lines 1 to 2</span><br>Hello world!$<br>$<br><span class="hljs-number">2</span>d                          <span class="hljs-comment"># Delete line 2</span><br>,l                          <span class="hljs-comment"># List entire buffer</span><br>Hello world!$<br>Isn&#x27;t <span class="hljs-keyword">it</span> a nice <span class="hljs-built_in">day</span>?$<br>s/nice/terrible/g           <span class="hljs-comment"># Substitute globally</span><br>,l<br>Hello world!$<br>Isn&#x27;t <span class="hljs-keyword">it</span> a terrible <span class="hljs-built_in">day</span>?$<br>w foo.txt                   <span class="hljs-comment"># Write to foo.txt</span><br><span class="hljs-number">38</span>                          <span class="hljs-comment"># (bytes written)</span><br>q                           <span class="hljs-comment"># Quit</span><br>[sinclairtarget <span class="hljs-number">10</span>:<span class="hljs-number">50</span> ~]$ cat foo.txt<br>Hello world!<br>Isn&#x27;t <span class="hljs-keyword">it</span> a terrible <span class="hljs-built_in">day</span>?<br></code></pre></td></tr></table></figure><p>正如你所看到的，ed 并不是一个很方</p><h2 id="2-2-Bill-Joy-写了一个文本编辑器"><a href="#2-2-Bill-Joy-写了一个文本编辑器" class="headerlink" title="2.2 Bill Joy 写了一个文本编辑器"></a>2.2 Bill Joy 写了一个文本编辑器</h2><p>ed 对于 Thompson 和 Ritchie 来说已经足够用了。不过其他人觉得它很难使用，并因其成为 Unix 对新手来说很困难的一个特别典型例子而出名。6 1975年，一个叫 George Coulouris 的人在伦敦玛丽皇后学院安装的 Unix 系统上开发了 ed 的一个改进版。Coulouris 利用他在玛丽皇后学院得到的视频显示来编写他的编辑器。Coulouris 的程序允许用户在屏幕上编辑某一行，在这一行上进行码字（想像一下在一行上使用 Vim）。Coulouris 将他的程序称为 em，或者“普通人的编辑器”，这是他在 Thompson 访问了玛丽皇后学院后受到的启发，据说 Thompson 看到了 Coulouris 构建的程序，然后驳回了它，并说他在编辑的时候不需要看文件的状态。7</p><p>1976年，Coulouris 带着 em 到了加州大学伯克利分校，在这里，他在计算机学院度过了一个夏天。这距 Ken Thompson 离开加州大学伯克利分校到贝尔实验室工作已经整整十年。在加州大学伯克利分校，Coulouris 遇到了 Bill Joy，一个在伯克利软件发行版(BSD)工作的研究生。Coulouris 向 Joy 展示了 em，Joy 从 Coulouris 的源代码开始，开发了一个 ed 的改进版，被称为 ex，意思是“扩展的 ed”。ex 的 1.1 版本与1978年第一版 BSD Unix 捆绑在一起。ex 在很大程度上与 ed 兼容，但是它添加了两个模式：一个“open”模式，它可以进行单行编辑，就像在 em 中一样，还有一个“visual”模式，接管了整个屏幕，并启用了我们今天习惯的整个文件的实时编辑。便的交互式程序。</p><p>对于 1979 年发布的第二个 BSD 版本，引入了一个名叫 vi 的可执行程序，它只能在可视模式下打开 ex。8</p><p>ex&#x2F;vi（以下称为 vi）定义了现在我们使用 Vim 的大多数规则，这些规则已经不是 ed 的一部分。Joy 使用的视频终端是 Lear Siegler ADM-3A，它有一个没有光标的键盘。取而代之的是在 h，j，k，和 l 键的地方绘制了一个箭头，这就是 Joy 在 vi 中使用这些键来移动光标的原因、ADM-3A 键盘上的退出键也是今天我们可以找到 tab 键的地方，它解释了如何为这样一个难以触及的键分配了一个与退出模式相同的操作。命令的前缀冒号“:”也是来自于 vi，在常规模式下（即运行 ex 后进入的模式）使用冒号“:”作为提示。这解决了关于 ed 的长期抱怨，曾经的 ed 在这种情况下是不会提示用户的。在可视模式下，保存和退出现在可以输入经典的“:wq”命令。“Yanking”和“puts”标记以及用于设置选项的 set 命令都是原始 vi 的一部分。今天我们在 Vim 中进行基本的文本编辑使用的功能大部分都是 vi 的功能。<img src="https://img-blog.csdnimg.cn/20200716202300932.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70#pic_center"></p><p>vi 是除了 ed 之外唯一与 BSD Unix 捆绑在一起的文本编辑器。那时，Emacs 需要花费上百美元（在GNU Emacs之前），所以 vi 变得非常流行。但是 vi 是 ed 的直接后裔，这意味着没有 AT＆T 源码许可证就无法修改源代码。因此激励了一些人去创建 vi 的开源版本。STEVIE（VI爱好者的 ST 编辑器）出现于 1987 年，Elvis 诞生于 1990 年，nvi 出现于 1994 年。其中一些克隆的版本增加了额外的功能，如语法高亮和分割窗口。Elvis 尤其将它的许多功能都纳入到了 Vim 中，因为许多 Elvis 用户都为此做出了努力。</p><h2 id="2-3-Bram-Moolenaar-编写了-Vim"><a href="#2-3-Bram-Moolenaar-编写了-Vim" class="headerlink" title="2.3 Bram Moolenaar 编写了 Vim"></a>2.3 Bram Moolenaar 编写了 Vim</h2><p>“Vim”，现在可称为“Vi Improved”(Vi改进版)，原来也被称为“Vi Imitation”（Vi模拟版）。与许多其它 vi 克隆版一样，Vim 的初衷是尝试复制 Vi，使其在不支持 Vi 的平台上使用。Bram Moolenaar，一位在荷兰芬洛一家复印公司工作的软件工程师，想要为他的全新 Amiga 2000 提供类似 vi 的东西。Moolenaar 已经习惯于在他的大学的 Unix 系统上使用 vi，现在已经熟练到“就像在使用他的手指”。10 因此，在 1988 年，使用现有的 vi 克隆版 STEVIE 作为起点，Moolenaar 开始开发 Vim。</p><p>Moolenaar 使用 STEVIE，是因为 STEVIE 之前曾出现在 Fred Fish 磁盘上。Fred Fish 是一名美国程序员每个月选择 Amiga 平台上最好的开源软件，放到一张软盘上并寄出。任何人都可以请求索取磁盘，而仅仅只需要邮费。STEVIE 的若干个版本在 Fred Fish Disk 上被发布。Moolenaar 使用的版本已在 Fred Fish Disk 256 上发布。11（令人失望的是，Fred Fish Disk 似乎与 Freddi Fish 无关）。</p><p>Moolenaar 喜欢 STEVIE，但是他很快发现缺少了许多 vi 命令。12 因此，对于 Vim 的第一个版本，Moolenaar 将 vi 兼容性作为他的首要任务。其他人编写了一系列 vi 宏，当通过正确的 vi 兼容编辑器运行时，可以解决随机生成的迷宫。Moolenaar 能够让这些宏在 Vim 中运行。1991年，Vim 首次发布于 Fred Fish Disk 591 中，被称为“Vi Imitation”。13 Moolenaar 添加了一些功能（包括多级撤消和编译错误的“quickfix”模式），这意味着 Vim 超越了 vi。但是 Vim 在 1993 年通过 FTP 发布 Vim 2.0 之前，一直保持着“Vi Imitation”的名字。</p><p>在各种互联网合作者的偶尔帮助下，Moolenaar 为 Vim 增加了一些稳定的功能。Vim 2.0 引入了对 wrap 选项的支持以及通过长行文本的水平滚动。Vim 3.0 增加了对分割窗口和缓冲区的支持，这一功能的灵感来自 vi，克隆了 nvi。Vim 现在还将每个缓冲区保存到交换文件中，以便编辑后的文本可以在崩溃中存活。Vimscript 首次亮相于 Vim 5.0，同时支持语法高亮。一直以来，Vim 的受欢迎程度都在增长。它被移植到 MS-DOS，Windows，Mac，甚至 Unix，在以上操作系统与原始的 vi 竞争。</p><p>2006年，Vim 被《Linux Journal》读者选为最受欢迎的编辑工具。14今天，根据 Stack Overflow 的 2018 年开发者调查，Vim 是最受欢迎的文本模式（即终端模拟器）编辑器，25.8％ 的软件开发者使用它（和 40％ 的系统管理员&#x2F;DevOps 工程师）。15有一段时间，在20世纪80年代后期和整个20世纪90年代，程序员发起了“编辑器战争”，使得 Emacs 用户与 vi（以及最终的Vim）用户进行了对抗。虽然 Emacs 肯定还会继续发展，但有些人认为编辑大战已经结束，Vim 赢了。162018 Stack Overflow 开发者调查显示这是真的；只有 4.1％ 的受访者使用过 Emacs。</p><p>Vim是如何变得如此成功的？显然人们喜欢Vim所提供的功能。但我认为，Vim背后的悠久历史表明它拥有比其功能集更多的优势。Vim的代码库可以追溯到1988年，当时Moolenaar开始致力于此。另一方面，“wq文本编辑器” - 一个关于Unix风格的文本编辑器应该如何工作的更宽泛视角 - 可以追溯到半个世纪之前。“wq文本编辑器”有一些不同的具体表达方式，但部分归功于Bill Joy和Bram Moolenaar对后向兼容性的特别关注，随着时间的推移逐渐积累了好的想法。从这个意义上说，“wq文本编辑器”是运行时间最长、最成功的开源项目之一，享用了计算机世界一些最伟大的思想家的贡献。我不认为“初创公司 - 抛弃所有先例 - 并创造 - 破坏性 - 全新-软件”的发展方法必然是坏事，但Vim提醒世人：协作和增量方法也可以产生奇迹。</p><hr><h2 id="3-Vim的下载与安装-加入Vim到环境变量"><a href="#3-Vim的下载与安装-加入Vim到环境变量" class="headerlink" title="3.Vim的下载与安装(加入Vim到环境变量)"></a>3.Vim的下载与安装(加入Vim到环境变量)</h2><p>请注意这里是第一个天坑<br>如果您在<a href="https://www.vim.org/">Vim官网</a>的下载页面下载Vim for Windows，您大概率会下载到Vim32位版或者Vim 32与64均兼容版，如果下载的是这两个，您安装的时候会默认安装Vim32位版。这似乎不是问题，但是很多Vim插件是需要Python支持的，或者需要本地编译，如果您的Vim是32位的，64位Python是不会被正确识别并调用的。这会导致你必须安装很多python的版本，并且默认的必须是32位的(如果你默认的python也是32位的当我没说)<br>所以我推荐你到这里下载Vim64位安装包<a href="https://github.com/vim/vim-win32-installer">Vim-wim32-installer 项目-Github</a> 虽然这里写的是32，但是是有64位的安装包的，同时这是Vim官方的项目，请放心使用<br>打开链接之后，在右侧找到并点击Releases，然后从上到下找到这样的一个链接</p><p><img src="https://img-blog.csdnimg.cn/20200716204853993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>点击：gvim_X.X.XXXX_x64.exe 64-bit installer，下载，恭喜你下载到了一个纯64位的Vim，同时在你安装的时候您也会看到写有(x64)</p><p><img src="https://img-blog.csdnimg.cn/20200716205458288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>之后的安装过程就简单多了，按照Vim的默认配置安装即可，与其他Windows应用一样只要一直下一步即可，我不建议您修改安装路径1. Vim不大，不会占用您C盘很多空间(全部安装仅44MB) 2. 与大多数人的配置保持一致非常方便您询问与解决问题</p><p>把Vim的安装路径加入环境变量(如果您不了解如何加入环境变量请自行百度，比较简单的一个操作) 尝试Win+R-&gt;cmd-&gt;vim试试是否加入环境变量成功，如果成功打开请按窗口右上角的关闭按钮关闭cmd</p><p>至此，您安装好了一个64位的Vim，这会为您探索Vim节省一天的配置Python与重装Vim的时间</p><hr><h1 id="4-认识与打开Vim"><a href="#4-认识与打开Vim" class="headerlink" title="4. 认识与打开Vim"></a>4. 认识与打开Vim</h1><p>安装结束后，您会发现您的开始菜单中有好多Vim，而且名字都不一样<img src="https://img-blog.csdnimg.cn/20200716210254958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>他们的区别如下</p><ol><li>有g和没有g<br>gVim 是在windows下的Gui图形用户界面的的 vim (GUI Vim)，支持windows的一些快捷方式，支持鼠标操作<br>vim 是在windows下的类似linux vi 编辑的界面，只能用键盘操作<br>vim的操作指令同时适用于gVim</li><li>Vim,Vim Diff, Vim Easy, Vim Read-only<br>Diff 是用来对比两个文件内容用的，直接打开挺没用的，不过直接拖2个文件到快捷方式上倒是可行；<br>Easy启动的时候是insert模式，适合普通windows用户的习惯；<br>Read-Only的用途：比如用read-only打开已经用vim打开过的文件，就不会提示让人烦躁的.swp文件存在的问题；</li></ol><p>在此，您只需知道，我们暂时会使用Vim来入门，最后您会使用gVim编程，这是因为gVim在没有配置的时候比Vim还不方便操作</p><p>您可以打开Vim了，确实非常丑，似乎不是用来写代码的。如果您开启了声音，大概率的您会发现按动绝大多数按键，windows都会发出报错的声音(一个噔~)，而且什么都输入不进去…</p><p>试着按一下键盘的<font color="red">i</font>键，你会发现您可以输入东西了，但是似乎只能输入，如何保存呢？如何关闭vim呢？您会发现除非直接按右上角的×，您甚至无法优雅的退出Vim，那就按右上角的×吧，连文件都没有保存</p><hr><h1 id="5-Vim基本的使用说明"><a href="#5-Vim基本的使用说明" class="headerlink" title="5. Vim基本的使用说明"></a>5. Vim基本的使用说明</h1><p>在这个阶段，您需要在Vim上做一些实践，但是可能大部分情况下都会使用右上角的×来关闭Vim，这一阶段的内容不需要保存，就这样放肆的强制关闭Vim吧，同时Vim的很多按键方式与其他编辑器不同，尝试去适应他，不要排斥，相信在您完成了本教程的配置，您的肌肉记忆就会形成，加油</p><h2 id="5-1-用Vim打开文件"><a href="#5-1-用Vim打开文件" class="headerlink" title="5.1 用Vim打开文件"></a>5.1 用Vim打开文件</h2><p>在cmd下输入vim + 路径即可，同时直接将文件拖动到快捷方式图标上也可以</p><h2 id="5-2-Vim的四种模式"><a href="#5-2-Vim的四种模式" class="headerlink" title="5.2 Vim的四种模式"></a>5.2 Vim的四种模式</h2><p>基本上 vim 共分为四种模式，分别是普通模式（Normal mode）、底行模式(Last line mode)、输入模式（Insert mode）和可视化模式（Visual mode）此处似乎与其他教程不一样，但是没有问题，只是分类不同而已。 四种模式的切换与作用如下</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/Vim%E4%BD%BF%E7%94%A8%E5%85%A8%E6%8C%87%E5%8D%97/1.png"></p><h3 id="5-2-1Normal-Mode"><a href="#5-2-1Normal-Mode" class="headerlink" title="5.2.1Normal Mode"></a>5.2.1Normal Mode</h3><p>这个模式一般用于浏览代码与进入底行模式输入命令，使用快捷键修改文章，这里仅仅介绍少量按键并讲解快捷键命令的组合原理，</p><table><thead><tr><th align="center"><strong>快捷键</strong></th><th align="center"><strong>效果</strong></th></tr></thead><tbody><tr><td align="center">h 或 向左箭头键(←)</td><td align="center">光标向左移动一个字符</td></tr><tr><td align="center">j 或 向下箭头键(↓)</td><td align="center">光标向下移动一个字符</td></tr><tr><td align="center">k 或 向上箭头键(↑)</td><td align="center">光标向上移动一个字符</td></tr><tr><td align="center">l 或 向右箭头键(→)</td><td align="center">光标向右移动一个字符</td></tr></tbody></table><p>用上面的按键你就可以上下浏览代码了，但是不建议使用方向键<br>Vim中还有一些键位是进行<strong>光标移动</strong>的</p><table><thead><tr><th align="center"><strong>快捷键</strong></th><th align="center"><strong>效果</strong></th></tr></thead><tbody><tr><td align="center">[Ctrl] + [f]</td><td align="center">屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td align="center">[Ctrl] + [b]</td><td align="center">屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td align="center">[Ctrl] + [d]</td><td align="center">屏幕『向下』移动半页</td></tr><tr><td align="center">[Ctrl] + [u]</td><td align="center">屏幕『向上』移动半页</td></tr><tr><td align="center">+</td><td align="center">光标移动到非空格符的下一行</td></tr><tr><td align="center">-</td><td align="center">光标移动到非空格符的上一行</td></tr><tr><td align="center">n &lt; space &gt;</td><td align="center">那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 20&lt; space &gt; 则光标会向后面移动 20 个字符距离。</td></tr><tr><td align="center">M</td><td align="center">光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td align="center">L</td><td align="center">光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td align="center">G</td><td align="center">移动到这个档案的最后一行(常用)</td></tr><tr><td align="center">nG</td><td align="center">n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td></tr><tr><td align="center">gg</td><td align="center">移动到这个档案的第一行，相当于 1G 啊！ (常用)</td></tr><tr><td align="center">n&lt; Enter &gt;</td><td align="center">n 为数字。光标向下移动 n 行(常用)</td></tr></tbody></table><p>以上是光标移动命令，然后是<strong>文档查询替换</strong>命令</p><table><thead><tr><th align="center"><strong>命令</strong></th><th align="center"><strong>作用</strong></th></tr></thead><tbody><tr><td align="center">&#x2F;word</td><td align="center">向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 &#x2F; vbird 即可！ (常用)</td></tr><tr><td align="center">?word</td><td align="center">向光标之上寻找一个字符串名称为 word 的字符串。</td></tr><tr><td align="center">n</td><td align="center">这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 &#x2F;vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr><tr><td align="center">N</td><td align="center">这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 &#x2F;vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td></tr><tr><td align="center">使用 &#x2F;word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！</td><td align="center"></td></tr><tr><td align="center">:n1,n2s&#x2F;word1&#x2F;word2&#x2F;g</td><td align="center">n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则： 『:100,200s&#x2F;vbird&#x2F;VBIRD&#x2F;g』。(常用)</td></tr><tr><td align="center"><strong>:1,$s&#x2F;word1&#x2F;word2&#x2F;g</strong> 或 <strong>:%s&#x2F;word1&#x2F;word2&#x2F;g</strong></td><td align="center">从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)</td></tr><tr><td align="center"><strong>:1,$s&#x2F;word1&#x2F;word2&#x2F;gc</strong> 或 <strong>:%s&#x2F;word1&#x2F;word2&#x2F;gc</strong></td><td align="center">从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td></tr></tbody></table><p>最后是最常用的<strong>增删改命令</strong></p><table><thead><tr><th align="center">快捷键</th><th align="center"><strong>作用</strong></th></tr></thead><tbody><tr><td align="center">x, X</td><td align="center">在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符( 相当于 [backspace] 亦即是退格键) (常用)</td></tr><tr><td align="center">nx</td><td align="center">n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td></tr><tr><td align="center">dd</td><td align="center">删除游标所在的那一整行(常用)</td></tr><tr><td align="center">ndd</td><td align="center">n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)</td></tr><tr><td align="center">d1G</td><td align="center">删除光标所在到第一行的所有数据</td></tr><tr><td align="center">dG</td><td align="center">删除光标所在到最后一行的所有数据</td></tr><tr><td align="center">d$</td><td align="center">删除游标所在处，到该行的最后一个字符</td></tr><tr><td align="center">d0</td><td align="center">那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr><tr><td align="center">yy</td><td align="center">复制游标所在的那一行(常用)</td></tr><tr><td align="center">nyy</td><td align="center">n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td align="center">y1G</td><td align="center">复制游标所在行到第一行的所有数据</td></tr><tr><td align="center">yG</td><td align="center">复制游标所在行到最后一行的所有数据</td></tr><tr><td align="center">y0</td><td align="center">复制光标所在的那个字符到该行行首的所有数据</td></tr><tr><td align="center">y$</td><td align="center">复制光标所在的那个字符到该行行尾的所有数据</td></tr><tr><td align="center">p, P</td><td align="center">p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td></tr><tr><td align="center">J</td><td align="center">将光标所在行与下一行的数据结合成同一行</td></tr><tr><td align="center">c</td><td align="center">重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr><tr><td align="center">u</td><td align="center">复原前一个动作。(常用)</td></tr><tr><td align="center">[Ctrl]+r</td><td align="center">重做上一个动作。(常用)</td></tr><tr><td align="center"></td><td align="center">不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)</td></tr></tbody></table><p>以上的增删改查命令有一定的命名规律，比如<font color="red"><code>y</code></font>是复制，然后复制什么没说，你用<font color="red"><code>yw</code></font>就是复制一个单词(word)，重复写一个命令就是对这个对行操作，例如<font color="red"><code>yy</code></font>就是复制一行，还可以<font color="red"><code>y+数字</code></font>，例如<font color="red"><code>y3</code></font>就是复制三行，还可以与其他命令组合比如<font color="red"><code>yG</code></font>就是从当前光标位置复制到文档最后，这样组合才可以让我们高效的使用Vim</p><h3 id="5-2-2-Last-line-mode模式"><a href="#5-2-2-Last-line-mode模式" class="headerlink" title="5.2.2 Last line mode模式"></a>5.2.2 Last line mode模式</h3><p>我一直觉得这就是Vim的Normal模式，结果别人都觉得这是一个新模式，那就当他是个新模式吧<br>你会发现在没有配置Vim的其他功能的时候，Vim的下面会写有一个Normal等，但是似乎下面还有一行，这一行是让你输入命令的，想要输入命令必须使用\或者:触发，\是用来查找内容的，严格说属于Normal模式，所以其实只有:开头的命令</p><table><thead><tr><th align="center"><strong>命令</strong></th><th align="center"><strong>作用</strong></th></tr></thead><tbody><tr><td align="center">:w</td><td align="center">将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td align="center">:w!</td><td align="center">若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td></tr><tr><td align="center">:q</td><td align="center">离开 vi (常用)</td></tr><tr><td align="center">:q!</td><td align="center">若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td align="center">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～</td><td align="center"></td></tr><tr><td align="center">:wq</td><td align="center">储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td align="center">:w [filename]</td><td align="center">将编辑的数据储存成另一个档案（类似另存新档）</td></tr><tr><td align="center">:r [filename]</td><td align="center">在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td></tr><tr><td align="center">:n1,n2 w [filename]</td><td align="center">将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td align="center">:! command</td><td align="center">暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls &#x2F;home』即可在 vi 当中察看 &#x2F;home 底下以 ls 输出的档案信息！</td></tr></tbody></table><p>还有很多，但是都是特殊的命令，或者某一个插件特有的，这里不做介绍</p><h3 id="5-2-3-Insert模式"><a href="#5-2-3-Insert模式" class="headerlink" title="5.2.3 Insert模式"></a>5.2.3 Insert模式</h3><p>插入模式是让你正常写代码的，注意的是，插入模式下hjkl的上下左右切换是失效的，可以用方向键，但是不建议，还是退出编辑模式在normal下改光标方便，进入插入模式的快捷键最常用的是<code>i</code>，还有如下的也可以</p><table><thead><tr><th align="center">快捷键</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">i, I</td><td align="center">进入输入模式(Insert mode)： i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)</td></tr><tr><td align="center">a, A</td><td align="center">进入输入模式(Insert mode)： a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td></tr><tr><td align="center">o, O</td><td align="center">进入输入模式(Insert mode)： 这是英文字母 o 的大小写。o 为『在目前光标所在的下一行处输入新的一行』； O 为在目前光标所在处的上一行输入新的一行！(常用)</td></tr><tr><td align="center">r, R</td><td align="center">进入取代模式(Replace mode)： r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr></tbody></table><p>这一部分没什么好说的，因为没有快捷键(否则你打着打着代码就触发了什么快捷键)</p><h3 id="5-2-4-Visual模式"><a href="#5-2-4-Visual模式" class="headerlink" title="5.2.4 Visual模式"></a>5.2.4 Visual模式</h3><p>可视化模式在很多文献中都没有介绍，但是是一个非常好用的模式，在这个模式下你可以用鼠标选择内容要选取一段文本，首先将光标移到段首，在普通模式下按 v 进入可视模式，然后把光标移到段末。 需要注意，光标所在字符是包含在选区中的</p><ul><li><p>v 进入字符可视化模式</p></li><li><p>V 进入行可视化模式</p></li><li><p>Ctrl+v 进入块可视化模式</p><p>块选择在表格中删除指定列非常有用</p><p>用 v 命令进入的字符可视化模式（Characterwise visual mode)。文本选择是以字符为单位的。</p><p>用 V 命令进入的行可视化模式（Linewise visual mode)。文本选择是以行为单位的。</p><p>用 ctrl-V 进入的块可视化模式（Blockwise visual mode）。可以选择一个矩形内的文本。</p></li></ul><p>使用鼠标或者hjkl即可选中字符&#x2F;行&#x2F;块，然后可以y，x…<br>更有用的是对块批量操作，例如批量注释可以这么写<br><strong>批量注释：</strong></p><p>Ctrl + v 进入块选择模式，然后移动光标选中你要注释的行，再按大写的 I 进入行首插入模式输入注释符号如 &#x2F;&#x2F; 或 #，输入完毕之后，按两下 ESC，Vim 会自动将你选中的所有行首都加上注释，保存退出完成注释。<br><strong>取消注释：</strong></p><p>Ctrl + v 进入块选择模式，选中你要删除的行首的注释符号，注意 &#x2F;&#x2F; 要选中两个，选好之后按 d 即可删除注释，ESC 保存退出<br>还可以在选择文字后输入<code>:</code>然后把你在平时这么用的就怎么写，注意按<code>:</code>会多出一些东西不要管他,例如</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">:A <span class="hljs-regexp">//</span>这是一堆注释<br></code></pre></td></tr></table></figure><p>然后Vim会根据你所写，先对每一样在Normal模式下使用<code>A</code>把光标移动到该行行尾，然后进入Insert模式输入<font color="red"><code>//这是一堆注释</code></font>对每一行都操作结束之后就会自动退出到Normal模式</p><p>具体的这个模式如何使用见<a href="https://linux.cn/article-10589-1.html">Vim可视化入门</a></p><h2 id="5-3-宏录制"><a href="#5-3-宏录制" class="headerlink" title="5.3 宏录制"></a>5.3 宏录制</h2><p>不怎么用，自己查吧</p><hr><h1 id="6-Vim的配置文件基本使用方法"><a href="#6-Vim的配置文件基本使用方法" class="headerlink" title="6. Vim的配置文件基本使用方法"></a>6. Vim的配置文件基本使用方法</h1><p>Vim不像其他的IDE会有一个图形化的配置界面，你需要将你需要的配置写到一个配置文件里面，Vim在启动的时候会读取这个文件，然后根据文件需要去配置Vim<br>如果你在百度搜索Vim配置文件相关的内容，只会得到是一个叫做<font color="red"><code>.vimrc的文件</code></font>，但是就算全盘搜索也找不到他，为啥呢，<font color=red><code>.vimrc</code></font>是Linux下的文件，win下的配置文件是<font color=red><code>_vimrc</code></font>，于是你会发现在Vim安装目录和<font color=red><code>C://User/你的用户名</code></font>下还有一个，我们使用自己用户名下的,如果没有的话就自己新建一个，这个不是因为你的Vim没安装，他就是没有</p><h2 id="6-1-第一个Vim配置，行号"><a href="#6-1-第一个Vim配置，行号" class="headerlink" title="6.1 第一个Vim配置，行号"></a>6.1 第一个Vim配置，行号</h2><p>找到或者新建这个文件，右键选中用Vim打开，我们就打开了一个空的<font color=red><code>_vimrc</code></font>文件，试着往里面写下<font color=red><code>set number</code></font>，这个配置的意思是自动为添加行号，这样你写代码就可以在左边看到行号了</p><p>按动<code>ZZ</code>(大写的)保存文件，然而行号并没有出来，这是因为我们没有”刷新配置文件”,在Normal下输入命令<font color=red><code>:source $MYVIMRC</code></font>然后你就可以看到行号了，至此你成功配置了第一个Vimrc</p><h2 id="6-2-设置快捷键映射"><a href="#6-2-设置快捷键映射" class="headerlink" title="6.2 设置快捷键映射"></a>6.2 设置快捷键映射</h2><p>但是这似乎比较麻烦，每次修改之后还要输入那么长的刷新保存，如果有个快捷键帮助我们就好了,我设置的快捷键是大写的R，也就是<font color=red><code>Shift+R</code></font>，那么我们应该如何设置呢？首先要想好自己要设置的快捷键，不能与之前的快捷键相重合，还有快捷键的生效范围，是只有在Normal模式下生效还是在四个模式下都生效。例如我将大写<code>R</code>作为快捷键最好只在Normal下操作，否则在Insert模式下我输入大写的<font color=red><code>R</code></font>就没法输入了，但是例如F5这样的快捷键从来不会与其他模式冲突我们就可以设置为全局的</p><p>快捷键映射可以将一个组合键映射到一个命令，一个其他的组合键或者其他语法为</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">前缀+<span class="hljs-built_in">map</span> 快捷键 映射结果<br></code></pre></td></tr></table></figure><p>这里的前缀限定了map的作用范围是那几个模式，不写前缀默认是前缀n</p><ul><li>nmap：只有在Normal模式下生效</li><li>vmap：只有在Visual模式下生效</li><li>imap：只有在Insert模式下生效</li><li>cmap：只有在行底命令的模式下生效</li><li>Xnoremap：X是前面的n&#x2F;v&#x2F;i&#x2F;c，nore表示非递归的例如a被映射为了b，b被映射为了c，那么如果是递归的的话a就映射为了c</li></ul><p>对于被映射与要映射的动作按键遵循以下写法</p><ul><li>普通按键就直接写</li><li>Alt组合键写成<font color="red"><code>&lt;A-X&gt;</code></font>,例如Alt+S就是<font color="red"><code>&lt;A-S&gt;</code></font></li><li>Ctrl组合键写成<font color="red"><code>&lt;C-X&gt;</code></font>,例如Ctrl+S就是<font color="red"><code>&lt;C-S&gt;</code></font></li><li>FX写成<font color="red"><code>&lt;FX&gt;</code></font>，例如<font color="red"><code>&lt;F5&gt;</code></font>就是F5</li><li>四个方向键写成<font color="red"><code>&lt;方向&gt;</code></font>，例如<font color="red"><code>&lt;LEFT&gt;</code></font>就是方向左键</li><li>ESC就写成<font color="red"><code>&lt;ESC&gt;</code></font></li><li>Leader键就写成</li><li>回车写成<font color="red"><code>&lt;CR&gt;</code></font></li></ul><p>关于leader键：</p><p>im预置有很多快捷键，再加上各类插件的快捷键，大量快捷键出现在单层空间中难免引起冲突。为缓解该问题，而引入了前缀键<font color="red"><code>&lt;leader&gt;</code></font>。藉由前缀键， 则可以衍生出更多的快捷键命名空间（namespace)。例如将r键配置为<font color="red"><code>&lt;leader&gt;r</code></font>、<font color="red"><code>&lt;leader&gt;&lt;leader&gt;r</code></font>等多个快捷键。前缀键默认为<font color="red"><code>\</code></font></p><p>但是在我的键盘上<code>\</code>太远了，于是我就把leader换成了空格，只需要如下的命令<font color="red"><code>let mapleader = &quot;\&lt;space&gt;&quot;</code></font>写在开头就完成了替换</p><p>针对上面的问题我们就可以把刷新配置文件映射成S，配置如下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">map</span> R :<span class="hljs-keyword">source</span> $MYVIMRC<span class="hljs-symbol">&lt;CR&gt;</span><br></code></pre></td></tr></table></figure><h2 id="6-3-安装插件管理器"><a href="#6-3-安装插件管理器" class="headerlink" title="6.3 安装插件管理器"></a>6.3 安装插件管理器</h2><p>Vim好用就在于有大量插件供我们使用，这样我们可以自己配置自己喜欢的Vim，这里我们介绍插件管理器<font color="red"><code>Vim-Pluig</code></font>，同时我们一般的插件都是在GitHub上托管的，所以我们一般也是在GitHub上找插件，Vim的插件非常好识别，他使用的语言大多会写<font color="red"><code>Vim script</code></font></p><ol><li><a href="https://git-scm.com/">下载Git</a></li><li><a href="https://github.com/junegunn/vim-plug">打开插件管理器所在仓库</a></li><li>下载如下文件并放入Vim的安装目录下的autoload</li></ol><p><img src="https://img-blog.csdnimg.cn/2020071714475696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200717144957144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>这样我们就完成了插件管理器的安装<br>之后我们开始尝试安装第一个插件<br>首先在vimrc中写下这样三行，他可以帮助插件管理器识别你要装那些插件</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs leaf">call plug<span class="hljs-function"><span class="hljs-keyword">#</span><span class="hljs-title">begin</span><span class="hljs-params">(&#x27;~/.<span class="hljs-variable">vim</span>/<span class="hljs-variable">plugged</span>&#x27;)</span></span><br><br>call plug<span class="hljs-function"><span class="hljs-keyword">#</span><span class="hljs-title">end</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure><p>以后只要是需要安装的插件我们只需要把地址写在里面就可以直接安装了</p><h2 id="6-4-尝试安装第一个插件"><a href="#6-4-尝试安装第一个插件" class="headerlink" title="6.4 尝试安装第一个插件"></a>6.4 尝试安装第一个插件</h2><p>我们先来尝试安装一个主题插件，就安装我自用的主题snazzy吧。<br>首先我们找到<a href="https://github.com/connorholyday/vim-snazzy">这个主题的GitHub库</a></p><p>那如何告诉插件管理器我要安装这个插件，这个插件的安装包在哪里呢？<br>刚刚那个库的地址是</p><p><a href="https://github.com/connorholyday/vim-snazzy">https://github.com/connorholyday/vim-snazzy</a></p><p>我们发现<font color="red"><code>https://github.com/</code></font>是GitHub的前缀，而插件管理器默认库在GitHub所以只要告诉插件<font color="red"><code>connorholyday/vim-snazzy</code></font>就可以了，于是我们只需要在哪两行代中间写上</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;connorholyday/vim-snazzy&#x27;</span><br></code></pre></td></tr></table></figure><p>即为</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs leaf">call plug<span class="hljs-function"><span class="hljs-keyword">#</span><span class="hljs-title">begin</span><span class="hljs-params">(&#x27;~/.<span class="hljs-variable">vim</span>/<span class="hljs-variable">plugged</span>&#x27;)</span></span><br>Plug &#x27;connorholyday/vim-snazzy&#x27;<br>call plug<span class="hljs-function"><span class="hljs-keyword">#</span><span class="hljs-title">end</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure><p>完事，我们还要让插件管理器去安装它，只需保存并刷新配置文件，输入命令<font color="red"><code>:PlugInstall</code></font>回车，等他跑完进度条即可</p><p>至此我们完成了第一个插件的<strong>安装</strong></p><p>但是似乎这个主题不能用，这么办呢，我们要告诉Vim我要应用这个主题，只要在配置文件最后写<font color="red"><code>colorscheme snazzy</code></font>，保存刷新配置文件即可，如果不行试试gVim</p><h2 id="6-5-尝试卸载第一个插件"><a href="#6-5-尝试卸载第一个插件" class="headerlink" title="6.5 尝试卸载第一个插件"></a>6.5 尝试卸载第一个插件</h2><p>如果哪一天插件不想要了，可以卸载，方法很简单，要么删除插件安装的哪一行，要么把他注释掉(vim下的注释是<code>&quot;</code>)，然后保存刷新配置文件，输入命令<font color="red"><code>:PlugClean</code></font><br>至此我介绍了Vim配置文件中常见的几种配置命令</p><hr><h1 id="7-基于问题解决的配置介绍"><a href="#7-基于问题解决的配置介绍" class="headerlink" title="7. 基于问题解决的配置介绍"></a>7. 基于问题解决的配置介绍</h1><p>在这一节中我将介绍Vim的常用插件的使用与Vim常用概念功能的介绍，但是不包括对于编程语言的适配，<font color="blue"><strong>从现在开始请使用gVim代替Vim</strong></font></p><h2 id="7-1-关于gVim"><a href="#7-1-关于gVim" class="headerlink" title="7.1 关于gVim"></a>7.1 关于gVim</h2><p>本来Vim用的好好的为什么要换gVim呢，因为vim是基于cmd&#x2F;Powershell 对于背景色等等很多方面支持很差，所以开发了gVim<br>打开gVim，但是比Vim还丑，将就看看，我们开始基于他美化与修改，不要选上面的菜单与工具，比较麻烦</p><p>一下没有说明就是王配置文件直接写就好了</p><h2 id="7-2-为打开-vimrc配置快捷键"><a href="#7-2-为打开-vimrc配置快捷键" class="headerlink" title="7.2 为打开_vimrc配置快捷键"></a>7.2 为打开<font color="red"><code>_vimrc</code></font>配置快捷键</h2><p>配置vim每次都要打开_vimrc,不如设置个快捷键让他打开</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xquery"><span class="hljs-keyword">map</span> rc : e <span class="hljs-variable">$HOME</span>\_vimrc<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">CR</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>很简单了，就是在Normal模式下按下<font color="red"><code>rc</code></font>，然后就打开了配置文件</p><h2 id="7-3-为Vim配置默认编码"><a href="#7-3-为Vim配置默认编码" class="headerlink" title="7.3 为Vim配置默认编码"></a>7.3 为Vim配置默认编码</h2><p>将编码设置为UTF-8，方便以后我们中文注释的Coding</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">encoding</span>=utf-8<br></code></pre></td></tr></table></figure><h2 id="7-4-为Vim配置代码高亮"><a href="#7-4-为Vim配置代码高亮" class="headerlink" title="7.4 为Vim配置代码高亮"></a>7.4 为Vim配置代码高亮</h2><p>最朴素的高亮</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">syntax</span> <span class="hljs-literal">on</span><br></code></pre></td></tr></table></figure><p>你会发现好像是有，但是不全，比如c++的<font color="red"><code>string</code></font>，这个到后面给C++配置的时候说</p><h2 id="7-5-将gVim的语言修改为英文方便使用"><a href="#7-5-将gVim的语言修改为英文方便使用" class="headerlink" title="7.5 将gVim的语言修改为英文方便使用"></a>7.5 将gVim的语言修改为英文方便使用</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">language C</span><br></code></pre></td></tr></table></figure><h2 id="7-6-直接写上-向下兼容vi"><a href="#7-6-直接写上-向下兼容vi" class="headerlink" title="7.6[直接写上]向下兼容vi"></a>7.6[直接写上]向下兼容vi</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">set</span> nocompatible<br><span class="hljs-keyword">filetype</span> <span class="hljs-keyword">on</span><br><span class="hljs-keyword">filetype</span> <span class="hljs-built_in">indent</span> <span class="hljs-keyword">on</span><br><span class="hljs-keyword">filetype</span> plugin <span class="hljs-keyword">on</span><br></code></pre></td></tr></table></figure><h2 id="7-7-在可视化下兼容鼠标"><a href="#7-7-在可视化下兼容鼠标" class="headerlink" title="7.7 在可视化下兼容鼠标"></a>7.7 在可视化下兼容鼠标</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">mouse</span>=a<br></code></pre></td></tr></table></figure><h2 id="7-8-将缩进设置为空格"><a href="#7-8-将缩进设置为空格" class="headerlink" title="7.8 将缩进设置为空格"></a>7.8 将缩进设置为空格</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">let &amp;<span class="hljs-attribute">t_ut</span>=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-built_in">set</span> expandtab<br></code></pre></td></tr></table></figure><h2 id="7-9-缩进配置为4空格"><a href="#7-9-缩进配置为4空格" class="headerlink" title="7.9 缩进配置为4空格"></a>7.9 缩进配置为4空格</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">tabstop</span>=4<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">shiftwidth</span>=4<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">softtabstop</span>=4<br></code></pre></td></tr></table></figure><h2 id="7-10-在空行末显示"><a href="#7-10-在空行末显示" class="headerlink" title="7.10 在空行末显示$"></a>7.10 在空行末显示<font color="red"><code>$</code></font></h2><p>win下似乎没有用</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> list<br></code></pre></td></tr></table></figure><h2 id="7-11-渲染Tab和空格"><a href="#7-11-渲染Tab和空格" class="headerlink" title="7.11 渲染Tab和空格"></a>7.11 渲染Tab和空格</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">listchars</span>=tab:▸\ ,trail:▫<br></code></pre></td></tr></table></figure><h2 id="7-12-尽可能在滚动的时候留下几行"><a href="#7-12-尽可能在滚动的时候留下几行" class="headerlink" title="7.12 尽可能在滚动的时候留下几行"></a>7.12 尽可能在滚动的时候留下几行</h2><p>就是往下滚的时候除非到行尾，保证当前选中行至少是倒数第五行，向上同理</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">scrolloff</span>=5<br></code></pre></td></tr></table></figure><h2 id="7-13-开启退格跨行退格"><a href="#7-13-开启退格跨行退格" class="headerlink" title="7.13 开启退格跨行退格"></a>7.13 开启退格跨行退格</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">backspace</span>=indent,eol,start<br></code></pre></td></tr></table></figure><h2 id="7-14-开启代码折叠"><a href="#7-14-开启代码折叠" class="headerlink" title="7.14 开启代码折叠"></a>7.14 开启代码折叠</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">foldmethod</span>=indent<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">foldlevel</span>=99<br></code></pre></td></tr></table></figure><h2 id="7-15-在三种模式下采用三种光标-仅gVim"><a href="#7-15-在三种模式下采用三种光标-仅gVim" class="headerlink" title="7.15 在三种模式下采用三种光标[仅gVim]"></a>7.15 在三种模式下采用三种光标[仅gVim]</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-keyword">let</span> &amp;<span class="hljs-attr">t_SI</span> = <span class="hljs-string">&quot;\&lt;Esc&gt;]50;CursorShape=1\x7&quot;</span><br><span class="hljs-keyword">let</span> &amp;<span class="hljs-attr">t_SR</span> = <span class="hljs-string">&quot;\&lt;Esc&gt;]50;CursorShape=2\x7&quot;</span><br><span class="hljs-keyword">let</span> &amp;<span class="hljs-attr">t_EI</span> = <span class="hljs-string">&quot;\&lt;Esc&gt;]50;CursorShape=0\x7&quot;</span><br></code></pre></td></tr></table></figure><h2 id="7-16-永远保留命令行"><a href="#7-16-永远保留命令行" class="headerlink" title="7.16 永远保留命令行"></a>7.16 永远保留命令行</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">laststatus</span>=2<br></code></pre></td></tr></table></figure><h2 id="7-17-在重新打开文件后保留光标位置"><a href="#7-17-在重新打开文件后保留光标位置" class="headerlink" title="7.17 在重新打开文件后保留光标位置"></a>7.17 在重新打开文件后保留光标位置</h2><p>Win下似乎不可?</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">au</span> BufReadPost * <span class="hljs-keyword">if</span> <span class="hljs-built_in">line</span>(<span class="hljs-string">&quot;&#x27;&#x27;\&quot;&quot;</span>) &gt; <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-built_in">line</span>(<span class="hljs-string">&quot;&#x27;\&quot;&quot;</span>) &lt;= <span class="hljs-built_in">line</span>(<span class="hljs-string">&quot;$&quot;</span>) | <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;normal! g&#x27;\&quot;&quot;</span> | <span class="hljs-keyword">endif</span>.<br></code></pre></td></tr></table></figure><h2 id="7-18-自动缩进"><a href="#7-18-自动缩进" class="headerlink" title="7.18 自动缩进"></a>7.18 自动缩进</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> autoindent<br></code></pre></td></tr></table></figure><h2 id="7-19-设置字体-仅gVim"><a href="#7-19-设置字体-仅gVim" class="headerlink" title="7.19 设置字体[仅gVim]"></a>7.19 设置字体[仅gVim]</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">guifont</span>=Powerline_Consolas:h12:cANSI:qDRAFT<br></code></pre></td></tr></table></figure><p>意思是用Powerline Consolas字体，字号12<br>关于为什么一定用这个字体，如何下载见airline插件一节</p><h2 id="7-20-隐藏gVim的四个滚动条"><a href="#7-20-隐藏gVim的四个滚动条" class="headerlink" title="7.20 隐藏gVim的四个滚动条"></a>7.20 隐藏gVim的四个滚动条</h2><p>隐藏gVim的四个滚动条如果被激活了F2再次关闭</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros">map &lt;silent&gt; &lt;F2&gt; <span class="hljs-keyword">:if</span> &amp;guioptions =~# <span class="hljs-string">&#x27;T&#x27;</span> &lt;Bar&gt;<br>\<span class="hljs-built_in">set</span> <span class="hljs-attribute">guioptions-</span>=T &lt;Bar&gt;<br>\<span class="hljs-built_in">set</span> <span class="hljs-attribute">guioptions-</span>=m &lt;bar&gt;<br>\<span class="hljs-keyword">else</span> &lt;Bar&gt;<br>\<span class="hljs-built_in">set</span> guioptions =T &lt;Bar&gt;<br>\<span class="hljs-built_in">set</span> guioptions =m &lt;Bar&gt;<br>\endif&lt;CR&gt;<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">guioptions-</span>=m   <span class="hljs-string">&quot;Hide Menu</span><br><span class="hljs-string">set guioptions-=T   &quot;</span>Hide Tool-Bar<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">guioptions-</span>=r   <span class="hljs-string">&quot;hide right scroll</span><br><span class="hljs-string">set guioptions-=b   &quot;</span>hide buttom scoll<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">guioptions-</span>=L   <span class="hljs-string">&quot;hide left scroll</span><br></code></pre></td></tr></table></figure><h2 id="7-21-设置相对行号"><a href="#7-21-设置相对行号" class="headerlink" title="7.21 设置相对行号"></a>7.21 设置相对行号</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> number<br><span class="hljs-built_in">set</span> relativenumber<br></code></pre></td></tr></table></figure><h2 id="7-22-突出显示选中的字符所在行列"><a href="#7-22-突出显示选中的字符所在行列" class="headerlink" title="7.22 突出显示选中的字符所在行列"></a>7.22 突出显示选中的字符所在行列</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> cursorline<br><span class="hljs-built_in">set</span> cursorcolumn<br></code></pre></td></tr></table></figure><h2 id="7-23-自动换行"><a href="#7-23-自动换行" class="headerlink" title="7.23 自动换行"></a>7.23 自动换行</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-built_in">set</span> <span class="hljs-keyword">wrap</span><br></code></pre></td></tr></table></figure><h2 id="7-24-显示输入的命令-右下角"><a href="#7-24-显示输入的命令-右下角" class="headerlink" title="7.24 显示输入的命令(右下角)"></a>7.24 显示输入的命令(右下角)</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> showcmd<br></code></pre></td></tr></table></figure><h2 id="7-25-输入命令的时候Tab显示提示"><a href="#7-25-输入命令的时候Tab显示提示" class="headerlink" title="7.25 输入命令的时候Tab显示提示"></a>7.25 输入命令的时候Tab显示提示</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> wildmenu<br></code></pre></td></tr></table></figure><h2 id="7-26-智能查找-高亮显示结果"><a href="#7-26-智能查找-高亮显示结果" class="headerlink" title="7.26 智能查找 高亮显示结果"></a>7.26 智能查找 高亮显示结果</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> hlsearch<br>exec <span class="hljs-comment">&quot;nohlsearch&quot;</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">incsearch</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">ignorecase</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">smartcase</span><br></code></pre></td></tr></table></figure><h2 id="7-27-复制粘贴到剪贴板"><a href="#7-27-复制粘贴到剪贴板" class="headerlink" title="7.27 复制粘贴到剪贴板"></a>7.27 复制粘贴到剪贴板</h2><p>注意的是我们的y和p只能在vim内部复制粘贴，想要复制粘贴到系统剪贴板需要用另一个命令，我把他换为<font color="red"><code>&lt;leader&gt;+y</code></font>,然后与y使用无异</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vnoremap</span> <span class="hljs-symbol">&lt;Leader&gt;</span><span class="hljs-keyword">y</span> <span class="hljs-comment">&quot;+y</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;Leader&gt;</span><span class="hljs-keyword">p</span> <span class="hljs-comment">&quot;+p</span><br></code></pre></td></tr></table></figure><h2 id="7-28-快捷保存-刷新"><a href="#7-28-快捷保存-刷新" class="headerlink" title="7.28 快捷保存 刷新"></a>7.28 快捷保存 刷新</h2><p>这里用S保存但是要声明不适用于s</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">map</span> S : <span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> s <span class="hljs-symbol">&lt;nop&gt;</span><br><span class="hljs-keyword">map</span> Q :q<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> R :<span class="hljs-keyword">source</span> $MYVIMRC<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">noremap</span> <span class="hljs-symbol">&lt;LEADER&gt;</span><span class="hljs-symbol">&lt;CR&gt;</span>  :<span class="hljs-keyword">nohlsearch</span><span class="hljs-symbol">&lt;CR&gt;</span><br></code></pre></td></tr></table></figure><h2 id="7-29-设置分屏"><a href="#7-29-设置分屏" class="headerlink" title="7.29 设置分屏"></a>7.29 设置分屏</h2><p>Vim下可以将窗口分为很多部分方便多代码同时调试，可以向上左下右扩展，但是命令有点长，我们直接写快捷键,<font color="red"><code>sp+h/j/k/l</code></font>就是分别向四个方向扩展</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">map spl <span class="hljs-symbol">:set</span> splitright&lt;<span class="hljs-title class_">CR</span>&gt;<span class="hljs-symbol">:vsplit&lt;CR&gt;</span><br>map sph <span class="hljs-symbol">:set</span> nosplitright&lt;<span class="hljs-title class_">CR</span>&gt;<span class="hljs-symbol">:vsplit&lt;CR&gt;</span><br>map spj <span class="hljs-symbol">:set</span> splitbelow&lt;<span class="hljs-title class_">CR</span>&gt;<span class="hljs-symbol">:split&lt;CR&gt;</span><br>map spk <span class="hljs-symbol">:set</span> nosplitbelow&lt;<span class="hljs-title class_">CR</span>&gt;<span class="hljs-symbol">:split&lt;CR&gt;</span><br></code></pre></td></tr></table></figure><p>然后我们需要将光标在多个窗口间移动，设置快捷键，<font color="red"><code>Alt+h/j/k/l</code></font>是向四个方向移动光标</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-h&gt;</span> <span class="hljs-symbol">&lt;C-w&gt;</span>h<br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-j&gt;</span> <span class="hljs-symbol">&lt;C-w&gt;</span><span class="hljs-keyword">j</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-k&gt;</span> <span class="hljs-symbol">&lt;C-w&gt;</span><span class="hljs-keyword">k</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-l&gt;</span> <span class="hljs-symbol">&lt;C-w&gt;</span><span class="hljs-keyword">l</span><br></code></pre></td></tr></table></figure><p>调整所在窗口的大小,<font color="red"><code>Alt++/_</code></font>是水平<font color="red"><code>+/-</code>,<code>Alt+-/=</code></font>是垂直的,自己看下在键盘上的位置就知道了</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">map</span> &lt;A-=&gt; :<span class="hljs-keyword">vertical</span> <span class="hljs-keyword">resize</span>+<span class="hljs-number">5</span> <span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A--&gt;</span> :<span class="hljs-keyword">vertical</span> <span class="hljs-keyword">resize</span>-<span class="hljs-number">5</span> <span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> &lt;A-+&gt; :<span class="hljs-keyword">resize</span>+<span class="hljs-number">5</span> <span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-_&gt;</span> :<span class="hljs-keyword">resize</span>-<span class="hljs-number">5</span> <span class="hljs-symbol">&lt;CR&gt;</span><br></code></pre></td></tr></table></figure><p>转置窗口，左右边上下，上下变左右</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">map</span> <span class="hljs-keyword">sv</span> <span class="hljs-symbol">&lt;C-w&gt;</span>t<span class="hljs-symbol">&lt;c-W&gt;</span>H<br><span class="hljs-keyword">map</span> <span class="hljs-keyword">sv</span> <span class="hljs-symbol">&lt;C-w&gt;</span>t<span class="hljs-symbol">&lt;c-W&gt;</span>K<br></code></pre></td></tr></table></figure><h2 id="7-30-增加删除tabe标签"><a href="#7-30-增加删除tabe标签" class="headerlink" title="7.30 增加删除tabe标签"></a>7.30 增加删除tabe标签</h2><p>Tabe是Vim中相当于浏览器的tab一样的东西<br>分别是增加<em>2，切换</em>2，移动*2</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs elixir">map tu <span class="hljs-symbol">:tabe&lt;CR&gt;</span><br>map tc <span class="hljs-symbol">:tabc&lt;CR&gt;</span><br>map tp <span class="hljs-symbol">:-tabnext&lt;CR&gt;</span><br>map tn <span class="hljs-symbol">:+tabnext&lt;CR&gt;</span><br>map tmn <span class="hljs-symbol">:-tabmove&lt;CR&gt;</span><br>map tmi <span class="hljs-symbol">:+tabmove&lt;CR&gt;</span><br></code></pre></td></tr></table></figure><h2 id="7-31-插入模式移动光标"><a href="#7-31-插入模式移动光标" class="headerlink" title="7.31 插入模式移动光标"></a>7.31 插入模式移动光标</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;C-l&gt;</span> <span class="hljs-symbol">&lt;Right&gt;</span><br></code></pre></td></tr></table></figure><h1 id="8-编译程序"><a href="#8-编译程序" class="headerlink" title="8. 编译程序"></a>8. 编译程序</h1><p>Vim不会自动识别并调用编译器的，所以我们要自己写一个小函数帮助我们调用编译器并编译<br>我不清楚Vim的语言语法，反正看了看别人的照猫画虎写的<br>F9会自动识别一部分语言并运行，成功会返回运行成功，否则给出错误信息。支持</p><ul><li>C&#x2F;C++（直接运行gcc&#x2F;g++）</li><li>python (直接运行)</li><li>R (Rscript运行，不过正常使用不要用这个)</li><li>Markdown (需要插件)</li><li>vbs (直接运行)</li><li>LaTeX (我忘了这么写的了)</li></ul><p>F10是用于C&#x2F;C++调试的</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">map</span>  <span class="hljs-symbol">&lt;F9&gt;</span>  :<span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">call</span> Run()<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">imap</span> <span class="hljs-symbol">&lt;F9&gt;</span>  <span class="hljs-symbol">&lt;ESC&gt;</span>:<span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">call</span> Run()<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span>  <span class="hljs-symbol">&lt;F10&gt;</span> :<span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">call</span> Debug()<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">imap</span> <span class="hljs-symbol">&lt;F10&gt;</span> <span class="hljs-symbol">&lt;ESC&gt;</span>:<span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">call</span> Debug()<span class="hljs-symbol">&lt;CR&gt;</span><br><br>func!  Debug()<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;c&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cc&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cxx&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cpp&quot;</span><br>        <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;:setlocal makeprg=&quot;</span>.<span class="hljs-string">&#x27;g++\ %\ -o\ %&lt;\ -gstabs+&#x27;</span><br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; compiling...&quot;</span><br>        <span class="hljs-keyword">silent</span> <span class="hljs-keyword">make</span><br>        <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;:!gdb %&lt;&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Debug finish! :-)&quot;</span><br>    <span class="hljs-keyword">else</span><br>        redraw!<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Language not support! :-(&quot;</span><br>    <span class="hljs-keyword">endif</span><br>endfunc<br><br>func! Run()<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;py&quot;</span><br>        ! Python -<span class="hljs-keyword">u</span> <span class="hljs-string">&quot;%&lt;.py&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;c&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cc&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cxx&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cpp&quot;</span><br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; compiling...&quot;</span><br>        :! g++ <span class="hljs-string">&quot;%&quot;</span> -<span class="hljs-keyword">o</span> <span class="hljs-string">&quot;%&lt;&quot;</span> &amp;&amp; <span class="hljs-string">&quot;%&lt;.exe&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;r&quot;</span><br>        <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;:! Rscript %&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;vbs&quot;</span><br>        <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;:! %&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;md&quot;</span><br>        :MarkdownPreview<br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running on Chrome! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;tex&quot;</span><br>        <span class="hljs-comment">&quot;&lt;localleader&gt;ll</span><br>        \\<span class="hljs-keyword">ll</span><br>        <span class="hljs-comment">&quot;:vimtex-compile</span><br>    <span class="hljs-keyword">else</span><br>        redraw!<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Language not support! :-(&quot;</span><br>    <span class="hljs-keyword">endif</span><br><span class="hljs-keyword">endfunction</span><br><br></code></pre></td></tr></table></figure><h1 id="9-在插件介绍之前的准备"><a href="#9-在插件介绍之前的准备" class="headerlink" title="9. 在插件介绍之前的准备"></a>9. 在插件介绍之前的准备</h1><p>我们需要一个3.6+的64bit的Python并加入环境变量（不做介绍）<br>注意的是一定是要64位，在加入环境变量之后一定把这个环境变量放在最前面，如图<img src="https://img-blog.csdnimg.cn/20200717161815855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>原因是当你在cmd下输入python的时候，cmd会将环境变量从上到下检索python.exe,如果放在后面会导致系统先搜索了其他路径，而Microsoft Store中也有一个python，如果Microsoft Store的路径在python前面就会打开store让你安装那个应用。<br>但是，如果你有多个python，例如要使用python2.X，或者必须使用python3.5作为默认的py怎么办呢？<br>只需要手动为python指定路径，但是同时环境变量还是要加的，在<font color="red"><code>_vimrc</code></font>中加入</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sml"><span class="hljs-keyword">let</span> &amp;pythonthreedll=<span class="hljs-symbol">&#x27;C</span>:\<span class="hljs-type">Program</span> <span class="hljs-type">Files</span> (x86)\<span class="hljs-type">Python36</span>-<span class="hljs-number">32</span>\python36.dll&#x27;<br><span class="hljs-keyword">let</span> &amp;pythonthreehome=<span class="hljs-symbol">&#x27;C</span>:\<span class="hljs-type">Program</span> <span class="hljs-type">Files</span> (x86)\<span class="hljs-type">Python36</span>-<span class="hljs-number">32</span><span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>路径自己改，于是你的最上面就可以写你自己用的python了<br>然后我们在vim中输入命令</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">:<span class="hljs-keyword">echo</span> <span class="hljs-built_in">has</span>(<span class="hljs-keyword">python3</span>)<br></code></pre></td></tr></table></figure><p>看到1就好了<br>再输入</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">:<span class="hljs-keyword">python3</span> <span class="hljs-keyword">print</span>(<span class="hljs-comment">&quot;1“）</span><br></code></pre></td></tr></table></figure><p>看到1说明成功调用<br>这样你的python就弄好了，如果有显示0或者报错的建议也使用这个指定</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sml"><span class="hljs-keyword">let</span> &amp;pythonthreedll=<span class="hljs-symbol">&#x27;C</span>:\<span class="hljs-type">Program</span> <span class="hljs-type">Files</span> (x86)\<span class="hljs-type">Python36</span>-<span class="hljs-number">32</span>\python36.dll&#x27;<br><span class="hljs-keyword">let</span> &amp;pythonthreehome=<span class="hljs-symbol">&#x27;C</span>:\<span class="hljs-type">Program</span> <span class="hljs-type">Files</span> (x86)\<span class="hljs-type">Python36</span>-<span class="hljs-number">32</span><span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>还是不行卸载vim和py重装</p><hr><h1 id="10-通用插件的介绍"><a href="#10-通用插件的介绍" class="headerlink" title="10. 通用插件的介绍"></a>10. 通用插件的介绍</h1><h2 id="10-1-输入法切换：-xkb-switch"><a href="#10-1-输入法切换：-xkb-switch" class="headerlink" title="10.1 输入法切换： xkb-switch"></a>10.1 输入法切换： xkb-switch</h2><p>有的时候我们用中文写了注释以后发现换到Normal之后还是默认中文，然后按<font color=red><code>:</code></font>就是中文的<font color=red><code>：</code></font>，<font color=red><code>/</code></font>变成<font color="red"><code>、</code></font>，这会导致响起非常吵的报错声音，这个<font color=red><code>xkb-switch</code></font>会在你从normal切换到insert之后记住你在normal下的输入语言，就算insert下是中文，切换到normal之后就变成了英文，切换到insert就有自动改为中文输入法</p><p><strong>安装方法：</strong></p><p>安装这两个插件</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">Plug &#x27;lyokha/vim-xkbswitch&#x27;                 <span class="hljs-string">&quot;neovim notsupport</span><br>Plug &#x27;DeXP/xkb-switch-win&#x27;                  <span class="hljs-string">&quot;neoivm norsupport</span><br></code></pre></td></tr></table></figure><p>在此处<a href="https://github.com/DeXP/xkb-switch-win/releases">下载dll文件</a>libxkbswitch64.dll</p><p>然后复制进vim.exe同目录下</p><p>在<font color="red"><code>_vimrc</code></font>中写下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">let</span> <span class="hljs-variable">g:XkbSwitchEnabled</span>     = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:XkbSwitchIMappings</span>   = [<span class="hljs-string">&#x27;cn&#x27;</span>]<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:XkbSwitchIMappingsTr</span> = &#123;<span class="hljs-string">&#x27;cn&#x27;</span>: &#123;<span class="hljs-string">&#x27;&lt;&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&gt;&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;&#125;<br></code></pre></td></tr></table></figure><h2 id="10-2-Vim内部的todolist：-undotree"><a href="#10-2-Vim内部的todolist：-undotree" class="headerlink" title="10.2 Vim内部的todolist： undotree"></a>10.2 Vim内部的todolist： undotree</h2><p>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;mbbill/undotree&#x27;</span><br></code></pre></td></tr></table></figure><p>配置<font color="red"><code>_vimrc</code></font>快捷键</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">map &lt;<span class="hljs-title class_">F5</span>&gt; <span class="hljs-symbol">:UndotreeToggle&lt;CR&gt;</span><br></code></pre></td></tr></table></figure><h2 id="10-3-Vim内部的文件树：NERDTreeToggle"><a href="#10-3-Vim内部的文件树：NERDTreeToggle" class="headerlink" title="10.3 Vim内部的文件树：NERDTreeToggle"></a>10.3 Vim内部的文件树：NERDTreeToggle</h2><p>似乎有点老了，有一个更好的，但是我老是装不上<br>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;preservim/nerdtree&#x27;</span><br></code></pre></td></tr></table></figure><p>配置<font color="red"><code>_vimrc</code></font>快捷键</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">map ff <span class="hljs-symbol">:NERDTreeToggle&lt;CR&gt;</span><br></code></pre></td></tr></table></figure><h2 id="10-4-Vim强大状态栏：Airline"><a href="#10-4-Vim强大状态栏：Airline" class="headerlink" title="10.4 Vim强大状态栏：Airline"></a>10.4 Vim强大状态栏：Airline</h2><p>Vim下面的状态显示确实有点捞，这个可以增强，但是会拖慢vim启动0.1s</p><p>安装插件</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sml"><span class="hljs-type">Plug</span> <span class="hljs-symbol">&#x27;vim</span>-airline/vim-airline&#x27;<br><span class="hljs-type">Plug</span> <span class="hljs-symbol">&#x27;vim</span>-airline/vim-airline-themes&#x27;<br></code></pre></td></tr></table></figure><p><font color="red"><code>_vimrc</code></font>配置写入</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-string">&quot;set ambiwidth=double                    &quot;</span> 设置为双字宽显示，否则无法完整显示如:☆<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_theme</span>=<span class="hljs-string">&#x27;bubblegum&#x27;</span><span class="hljs-comment">&quot;Airline主题</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_powerline_fonts</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot; 开启tabline</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline</span>#extensions#tabline#enabled = <span class="hljs-number">1</span>      <span class="hljs-comment">&quot;tabline中当前buffer两端的分隔字符</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline</span>#extensions#tabline#left_sep = <span class="hljs-string">&#x27; &#x27;</span>   <span class="hljs-comment">&quot;tabline中未激活buffer两端的分隔字符</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline</span>#extensions#tabline#left_alt_sep = <span class="hljs-string">&#x27;|&#x27;</span>      <span class="hljs-comment">&quot;tabline中buffer显示编号</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline</span>#extensions#tabline#buffer_nr_show = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot; 映射切换buffer的键位</span><br><span class="hljs-keyword">nnoremap</span> [<span class="hljs-keyword">b</span> :<span class="hljs-keyword">bp</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">nnoremap</span> ]<span class="hljs-keyword">b</span> :<span class="hljs-keyword">bn</span><span class="hljs-symbol">&lt;CR&gt;</span><br></code></pre></td></tr></table></figure><p>会发现似乎和别人的不一样，有乱码，有空白，这是因为字体不兼容，安装powerline字体即可，安装方法如下：</p><p><a href="https://github.com/powerline/fonts">下载</a>powerline打过补丁的字体，下载字体后选择所有字体右键，点击安装。</p><p>然后<font color="red"><code>_vimrc</code></font>写下，<font color="red"><code>h12</code></font>可以自己改字号如<font color="red"><code>h15</code></font></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">guifont</span>=Powerline_Consolas:h12:cANSI:qDRAFT<br></code></pre></td></tr></table></figure><p>airline还可以与其他插件搭配在期中显示其他内容，例如ALE</p><h2 id="10-5-多语言代码查错：ALE"><a href="#10-5-多语言代码查错：ALE" class="headerlink" title="10.5 多语言代码查错：ALE"></a>10.5 多语言代码查错：ALE</h2><p>这个不是很好装，尤其是C++，需要gcc等<br>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;dense-analysis/ale&#x27;</span><br></code></pre></td></tr></table></figure><p>在<font color="red"><code>_vimrc</code></font>写入，那几个emoji是自定义的</p><p>❌换成你喜欢错误标志，用我的也行<br>🔰换成你喜欢警告标志，用我的也行<br>⚡换成你喜欢警告标志，用我的也行</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot;始终开启标志列</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_sign_column_always</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_set_highlights</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;自定义error和warning图标</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_sign_error</span> = <span class="hljs-string">&#x27;❌&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_sign_warning</span> = <span class="hljs-string">&#x27;🔰&#x27;</span><br><span class="hljs-comment">&quot;在vim自带的状态栏中整合ale</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_statusline_format</span> = [<span class="hljs-string">&#x27;✗ %d&#x27;</span>, <span class="hljs-string">&#x27;⚡ %d&#x27;</span>, <span class="hljs-string">&#x27;✔ OK&#x27;</span>]<br><span class="hljs-comment">&quot;显示Linter名称,出错或警告等相关信息</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_echo_msg_error_str</span> = <span class="hljs-string">&#x27;E&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_echo_msg_warning_str</span> = <span class="hljs-string">&#x27;W&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_echo_msg_format</span> = <span class="hljs-string">&#x27;[%linter%] %s [%severity%]&#x27;</span><br><span class="hljs-comment">&quot;普通模式下，sp前往上一个错误或警告，sn前往下一个错误或警告</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-keyword">sp</span> <span class="hljs-symbol">&lt;Plug&gt;</span>(ale_previous_wrap)<br><span class="hljs-keyword">nmap</span> <span class="hljs-keyword">sn</span> <span class="hljs-symbol">&lt;Plug&gt;</span>(ale_next_wrap)<br><span class="hljs-comment">&quot;&lt;Leader&gt;s触发/关闭语法检查</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;Leader&gt;</span>s :ALEToggle<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-comment">&quot;&lt;Leader&gt;d查看错误或警告的详细信息</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;Leader&gt;</span>d :ALEDetail<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-string">&quot;set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;</span>)&#125;\ %&#123;ALEGetStatusLine()&#125;<br><span class="hljs-comment">&quot;cpp NOT C++</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_linters</span> = &#123;<br>\   <span class="hljs-string">&#x27;cpp&#x27;</span>: [<span class="hljs-string">&#x27;gcc&#x27;</span>],<br>\   <span class="hljs-string">&#x27;c&#x27;</span>: [<span class="hljs-string">&#x27;gcc&#x27;</span>],<br>\   <span class="hljs-string">&#x27;python&#x27;</span>: [<span class="hljs-string">&#x27;pylint&#x27;</span>],<br>\&#125;<br></code></pre></td></tr></table></figure><p>这里C语言检查的编译器是gcc，想用clang的直接换就可以了</p><p>如果需要在Airline显示自定义报错与警告数目则：</p><p>打开<font color="red"><code>用户/.vim/plugged/vim-airline/autoload/airline/extensions/ale.vim and replace</code></font></p><p>搜索</p><figure class="highlight purebasic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs purebasic">let error_symbol = get(g:, &#x27;airline<span class="hljs-symbol">#extensions</span><span class="hljs-symbol">#ale</span><span class="hljs-symbol">#error_</span><br></code></pre></td></tr></table></figure><p>找到唯一的结果的哪一行，用<font color="red"><code>&quot;</code></font>注释掉并换成</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">let</span> error_symbol = <span class="hljs-keyword">get</span>(g:, <span class="hljs-string">&#x27;airline#extensions#ale#error_symbol&#x27;</span>, <span class="hljs-string">&#x27;😡&#x27;</span>)<br></code></pre></td></tr></table></figure><p>最后那个emoji是报错数目的标志，可以自己换<br>搜索</p><p>找到唯一的结果的哪一行，用<font color="red"><code>&quot;</code></font>注释掉并换成</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">let</span> warning_symbol = <span class="hljs-keyword">get</span>(g:, <span class="hljs-string">&#x27;airline#extensions#ale#warning_symbol&#x27;</span>, <span class="hljs-string">&#x27;📛:&#x27;</span>)<br></code></pre></td></tr></table></figure><p>最后那个emoji是警告数目的标志，可以自己换</p><h2 id="10-6-代码自动注释：nerdcommenter"><a href="#10-6-代码自动注释：nerdcommenter" class="headerlink" title="10.6 代码自动注释：nerdcommenter"></a>10.6 代码自动注释：nerdcommenter</h2><p>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;preservim/nerdcommenter&#x27;</span><br></code></pre></td></tr></table></figure><p><font color="red"><code>_vimrc</code></font>写下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;C-m&gt;</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">cc</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-m&gt;</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">cu</span><br><span class="hljs-keyword">unmap</span> <span class="hljs-symbol">&lt;CR&gt;</span><br></code></pre></td></tr></table></figure><h2 id="10-7-代码彩虹括号"><a href="#10-7-代码彩虹括号" class="headerlink" title="10.7 代码彩虹括号"></a>10.7 代码彩虹括号</h2><p>可以彩虹匹配<font color="red"><code>()</code></font>,<font color="red"><code>&#123;&#125;</code></font>,<font color="red"><code>&lt;&gt;</code></font>,<font color="red"><code>[]</code></font>，效果参考</p><p><img src="https://img-blog.csdnimg.cn/20200717172800538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>这是vscode彩虹括号的效果，一样，同时我提供了vscode配色的色标<br>安装插件</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">Plug &#x27;luochen<span class="hljs-number">1990</span>/rainbow&#x27;<br></code></pre></td></tr></table></figure><p><font color="red"><code>_vimrc</code></font>写下</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">&quot; 1. vscode defult 2. author defult 3. vscode show</span><br><span class="hljs-string">&quot;</span><span class="hljs-string">\</span><span class="hljs-string">&#x27;guifgs&#x27;</span>: [<span class="hljs-string">&#x27;#B21212&#x27;</span>, <span class="hljs-string">&#x27;#1B9CED&#x27;</span>,<span class="hljs-string">&#x27;#FFFC00&#x27;</span>],<br><span class="hljs-string">&quot;\&#x27;guifgs&#x27;: [&#x27;royalblue3&#x27;, &#x27;darkorange3&#x27;, &#x27;seagreen3&#x27;, &#x27;firebrick&#x27;],</span><br><span class="hljs-string">&quot;</span><span class="hljs-string">\</span><span class="hljs-string">&#x27;guifgs&#x27;</span>: [<span class="hljs-string">&#x27;#C186BF&#x27;</span>, <span class="hljs-string">&#x27;#268EDB&#x27;</span>,<span class="hljs-string">&#x27;#F79318&#x27;</span>],<br><span class="hljs-keyword">let</span> g:rainbow_conf = &#123;<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;guifgs&#x27;</span>: [<span class="hljs-string">&#x27;#C186BF&#x27;</span>, <span class="hljs-string">&#x27;#268EDB&#x27;</span>,<span class="hljs-string">&#x27;#F79318&#x27;</span>],<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;ctermfgs&#x27;</span>: [<span class="hljs-string">&#x27;lightblue&#x27;</span>, <span class="hljs-string">&#x27;lightyellow&#x27;</span>, <span class="hljs-string">&#x27;lightcyan&#x27;</span>, <span class="hljs-string">&#x27;lightmagenta&#x27;</span>],<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;operators&#x27;</span>: <span class="hljs-string">&#x27;_,_&#x27;</span>,<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;parentheses&#x27;</span>: [<span class="hljs-string">&#x27;start=/(/ end=/)/ fold&#x27;</span>, <span class="hljs-string">&#x27;start=/\[/ end=/\]/ fold&#x27;</span>, <span class="hljs-string">&#x27;start=/&#123;/ end=/&#125;/ fold&#x27;</span>],<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;separately&#x27;</span>: &#123;<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;*&#x27;</span>: &#123;&#125;,<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;tex&#x27;</span>: &#123;<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;parentheses&#x27;</span>: [<span class="hljs-string">&#x27;start=/(/ end=/)/&#x27;</span>, <span class="hljs-string">&#x27;start=/\[/ end=/\]/&#x27;</span>],<br><span class="hljs-string">\</span>&#125;,<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;lisp&#x27;</span>: &#123;<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;guifgs&#x27;</span>: [<span class="hljs-string">&#x27;royalblue3&#x27;</span>, <span class="hljs-string">&#x27;darkorange3&#x27;</span>, <span class="hljs-string">&#x27;seagreen3&#x27;</span>, <span class="hljs-string">&#x27;firebrick&#x27;</span>, <span class="hljs-string">&#x27;darkorchid3&#x27;</span>],<br><span class="hljs-string">\</span>&#125;,<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;vim&#x27;</span>: &#123;<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;parentheses&#x27;</span>: [<span class="hljs-string">&#x27;start=/(/ end=/)/&#x27;</span>, <span class="hljs-string">&#x27;start=/\[/ end=/\]/&#x27;</span>, <span class="hljs-string">&#x27;start=/&#123;/ end=/&#125;/ fold&#x27;</span>, <span class="hljs-string">&#x27;start=/(/ end=/)/ containedin=vimFuncBody&#x27;</span>, <span class="hljs-string">&#x27;start=/\[/ end=/\]/ containedin=vimFuncBody&#x27;</span>, <span class="hljs-string">&#x27;start=/&#123;/ end=/&#125;/ fold containedin=vimFuncBody&#x27;</span>],<br><span class="hljs-string">\</span>&#125;,<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;html&#x27;</span>: &#123;<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;parentheses&#x27;</span>: [<span class="hljs-string">&#x27;start=/\v\&lt;((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ &gt;])@!\z([-_:a-zA-Z0-9]+)(\s+[-_:a-zA-Z0-9]+(\=(&quot;[^&quot;]*&quot;|&#x27;</span>.<span class="hljs-string">&quot;&#x27;&quot;</span>.<span class="hljs-string">&#x27;[^&#x27;</span>.<span class="hljs-string">&quot;&#x27;&quot;</span>.<span class="hljs-string">&#x27;]*&#x27;</span>.<span class="hljs-string">&quot;&#x27;&quot;</span>.<span class="hljs-string">&#x27;|[^ &#x27;</span>.<span class="hljs-string">&quot;&#x27;&quot;</span>.<span class="hljs-string">&#x27;&quot;&gt;&lt;=`]*))?)*\&gt;/ end=#&lt;/\z1&gt;# fold&#x27;</span>],<br><span class="hljs-string">\</span>&#125;,<br><span class="hljs-string">\</span><span class="hljs-string">&#x27;css&#x27;</span>: <span class="hljs-number">0</span>,<br><span class="hljs-string">\</span>&#125;<br><span class="hljs-string">\&#125;</span><br><span class="hljs-keyword">let</span> g:rainbow_active = <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="10-8-自定义开始菜单"><a href="#10-8-自定义开始菜单" class="headerlink" title="10.8 自定义开始菜单"></a>10.8 自定义开始菜单</h2><p>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;mhinz/vim-startify&#x27;</span><br></code></pre></td></tr></table></figure><p>想要修改默认样式改这里，写入配置文件，删掉注释，换成自己想要的</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">&quot;let g:startify_custom_header = [</span><br><span class="hljs-string">&quot;</span>            <span class="hljs-string">\</span> <span class="hljs-string">&#x27;+------------------------------+&#x27;</span>,<br><span class="hljs-string">&quot;            \ &#x27;|                              |&#x27;,</span><br><span class="hljs-string">&quot;</span>            <span class="hljs-string">\</span> <span class="hljs-string">&#x27;|    Still waters run deep!    |&#x27;</span>,<br><span class="hljs-string">&quot;            \ &#x27;|                              |&#x27;,</span><br><span class="hljs-string">&quot;</span>            <span class="hljs-string">\</span> <span class="hljs-string">&#x27;+----------------+-------------+&#x27;</span>,<br><span class="hljs-string">&quot;            \]</span><br><span class="hljs-string">&quot;</span><span class="hljs-keyword">let</span> g:startify_custom_footer = [<br><span class="hljs-string">&quot;            \ &#x27;+------------------------------+&#x27;,</span><br><span class="hljs-string">&quot;</span>            <span class="hljs-string">\</span> <span class="hljs-string">&#x27;|     Keep an open mind!       |&#x27;</span>,<br><span class="hljs-string">&quot;            \ &#x27;+----------------+-------------+&#x27;,</span><br><span class="hljs-string">&quot;</span>            <span class="hljs-string">\]</span><br><span class="hljs-keyword">let</span> g:startify_files_number = <span class="hljs-number">5</span><br><span class="hljs-string">&quot;let g:startify_custom_indices = map(range(1,100), &#x27;string(v:val)&#x27;)</span><br></code></pre></td></tr></table></figure><h2 id="10-9-全语言代码自动补全"><a href="#10-9-全语言代码自动补全" class="headerlink" title="10.9 全语言代码自动补全"></a>10.9 全语言代码自动补全</h2><p>这是Vim上被誉为最难安装的插件，做好肝一天的准备<br>请严格按照我的方法安装</p><ol><li><p>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;ycm-core/YouCompleteMe&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>插入配置文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">set</span> runtimepath+=~/.<span class="hljs-keyword">vim</span>/plugged/YouCompleteMe<br><span class="hljs-keyword">autocmd</span> InsertLeave * <span class="hljs-keyword">if</span> <span class="hljs-built_in">pumvisible</span>() == <span class="hljs-number">0</span>|<span class="hljs-keyword">pclose</span>|<span class="hljs-keyword">endif</span> <span class="hljs-string">&quot;离开插入模式后自动关闭预览窗口&quot;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_collect_identifiers_from_tags_files</span> = <span class="hljs-number">1</span>           <span class="hljs-comment">&quot; 开启 YCM基于标签引擎</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_collect_identifiers_from_comments_and_strings</span> = <span class="hljs-number">1</span> <span class="hljs-comment">&quot; 注释与字符串中的内容也用于补全</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:syntastic_ignore_files</span>=[<span class="hljs-string">&quot;.*\.py$&quot;</span>]<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_seed_identifiers_with_syntax</span> = <span class="hljs-number">1</span>                  <span class="hljs-comment">&quot; 语法关键字补全</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_complete_in_comments</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_confirm_extra_conf</span> = <span class="hljs-number">0</span>                            <span class="hljs-comment">&quot; 关闭加载.ycm_extra_conf.py提示</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_key_list_select_completion</span> = [<span class="hljs-string">&#x27;&lt;c-n&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;Down&gt;&#x27;</span>]  <span class="hljs-comment">&quot; 映射按键,没有这个会拦截掉tab, 导致其他插件的tab不能用.</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_key_list_previous_completion</span> = [<span class="hljs-string">&#x27;&lt;c-p&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;Up&gt;&#x27;</span>]<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_complete_in_comments</span> = <span class="hljs-number">1</span>                          <span class="hljs-comment">&quot; 在注释输入中也能补全</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_complete_in_strings</span> = <span class="hljs-number">1</span>                           <span class="hljs-comment">&quot; 在字符串输入中也能补全</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_collect_identifiers_from_comments_and_strings</span> = <span class="hljs-number">1</span> <span class="hljs-comment">&quot; 注释和字符串中的文字也会被收入补全</span><br><span class="hljs-comment">&quot;let g:ycm_global_ycm_extra_conf=&#x27;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_global_ycm_extra_conf</span>=<span class="hljs-string">&#x27;~/.vim/plugged/YouCompleteMe/third_party/ycmd/cpp/.ycm_extra_conf.py&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_show_diagnostics_ui</span> = <span class="hljs-number">0</span>                           <span class="hljs-comment">&quot; 禁用语法检查</span><br><span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;CR&gt;</span> <span class="hljs-built_in">pumvisible</span>() ? <span class="hljs-string">&quot;\&lt;C-y&gt;&quot;</span> : <span class="hljs-string">&quot;\&lt;CR&gt;&quot;</span><br><span class="hljs-comment">&quot; 回车即选中当前项</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;c-j&gt;</span> :YcmCompleter GoToDefinitionElseDeclaration<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-comment">&quot; 跳转到定义处</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_min_num_of_chars_for_completion</span>=<span class="hljs-number">2</span>                 <span class="hljs-comment">&quot; 从第2个键入字符就开始罗列匹配项</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_key_invoke_completion</span> = <span class="hljs-string">&#x27;&lt;c-z&gt;&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_semantic_triggers</span> =  &#123;<br>\ <span class="hljs-string">&#x27;c,cpp,python,java,go,erlang,perl&#x27;</span>: [<span class="hljs-string">&#x27;re!\w&#123;2&#125;&#x27;</span>],<br>\ <span class="hljs-string">&#x27;cs,lua,javascript&#x27;</span>: [<span class="hljs-string">&#x27;re!\w&#123;2&#125;&#x27;</span>],<br>\ &#125;<br></code></pre></td></tr></table></figure></li><li><p>下载安装<font color="red"><code>clang</code></font>与<font color="red"><code>cmake</code></font>并加入环境变量</p></li><li><p>这是最麻烦的，如果有vs还好说，像我一样不喜欢vs的就很麻烦了，首先去项目的仓库找说明文档,找到这里</p><p><img src="https://img-blog.csdnimg.cn/20200717175533479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>这是一个天坑(如果你电脑又vs，跳过这段)<br>他会让你下载一个vs build tool 2019，<a href="https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;rel=16">https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;rel=16</a><br>如果安装之后会显示需要vs buildtool 2019而不是2017，所以把网址最后的15改成16(这是vs2019的版本编号)<br>下载，安装，只选择这一个</p><p><img src="https://img-blog.csdnimg.cn/20200717175854850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>安装包挺大的，建议安装到D盘<img src="https://img-blog.csdnimg.cn/20200717175920977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>安装后打开插件安装地址，按住shift，右键，点击打开powershell<br>输入命令<font color="red"><code>Python install.py --all</code></font> 等待，很慢，而且网络要求高，自己懂，挂好软件，一次不行重新执行命令，编译结束之后就可以了<img src="https://img-blog.csdnimg.cn/20200717180059550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p></li></ol><blockquote><p>如果你电脑有vs,使用vmshere(电脑没有的上网去查，有安装方法)查询版本号</p><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/Vim%E4%BD%BF%E7%94%A8%E5%85%A8%E6%8C%87%E5%8D%97/2.png"></p><p>然后进入插件目录</p><p><img src="https://img-blog.csdnimg.cn/20200717180059550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Python install<span class="hljs-selector-class">.py</span> <span class="hljs-attr">--all</span> <span class="hljs-attr">--msvc</span>=<span class="hljs-number">17</span><br></code></pre></td></tr></table></figure><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/Vim%E4%BD%BF%E7%94%A8%E5%85%A8%E6%8C%87%E5%8D%97/3.png"></p><p>等执行完成，在输入</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Python install<span class="hljs-selector-class">.py</span> <span class="hljs-attr">--all</span> <span class="hljs-attr">--msvc</span>=<span class="hljs-number">17</span> <span class="hljs-attr">--verbose</span><br></code></pre></td></tr></table></figure><p><img src="https://tian_sj.gitee.io/tian-sj.github.io/post/Vim%E4%BD%BF%E7%94%A8%E5%85%A8%E6%8C%87%E5%8D%97/4.png"></p></blockquote><h2 id="10-10-Vim自动括号补全"><a href="#10-10-Vim自动括号补全" class="headerlink" title="10.10 Vim自动括号补全"></a>10.10 Vim自动括号补全</h2><p>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;Raimondi/delimitMate&#x27;</span><br></code></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Bundle</span> <span class="hljs-string">&#x27;Raimondi/delimitMate&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="10-11-Vim函数整理"><a href="#10-11-Vim函数整理" class="headerlink" title="10.11 Vim函数整理"></a>10.11 Vim函数整理</h2><p>帮助你生成当前程序的所有函数和变量索引，F4激活<br>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;vim-scripts/taglist.vim&#x27;</span><br></code></pre></td></tr></table></figure><p><a href="http://ctags.sourceforge.net/">下载ctags58.zip文件</a><br>解压<br>为解压目录添加环境变量<br>配置文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">let <span class="hljs-attribute">Tlist_Use_Right_Window</span>=1<br>let <span class="hljs-attribute">Tlist_Inc_Winwidth</span>=0<br>let <span class="hljs-attribute">Tlist_File_Fold_Auto_Close</span>=1<br>let <span class="hljs-attribute">Tlist_Exit_Onluwindow</span>=1<br>map &lt;F4&gt; :TlistToggle&lt;cr&gt;<br></code></pre></td></tr></table></figure><h2 id="10-12-gVim界面透明"><a href="#10-12-gVim界面透明" class="headerlink" title="10.12 gVim界面透明"></a>10.12 gVim界面透明</h2><p>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;vim-scripts/VimTweak&#x27;</span><br>Plug <span class="hljs-string">&#x27;mattn/transparency-windows-vim&#x27;</span><br></code></pre></td></tr></table></figure><p><a href="https://github.com/mattn/vimtweak">下载</a>vimtweak64.dll文件<br>放到gvim.exe同路径下<br>配置文件写入</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">:<span class="hljs-keyword">call</span> <span class="hljs-built_in">libcallnr</span>(<span class="hljs-string">&quot;vimtweak64.dll&quot;</span>, <span class="hljs-string">&quot;SetAlpha&quot;</span>, <span class="hljs-number">250</span>)<br></code></pre></td></tr></table></figure><p>最后的数字为200-255自助调节透明度，成功后需要刷新配置文件</p><h1 id="11-特定语言的插件介绍"><a href="#11-特定语言的插件介绍" class="headerlink" title="11. 特定语言的插件介绍"></a>11. 特定语言的插件介绍</h1><h2 id="11-1-C-x2F-C-的插件"><a href="#11-1-C-x2F-C-的插件" class="headerlink" title="11.1 C&#x2F;C++的插件"></a>11.1 C&#x2F;C++的插件</h2><h3 id="11-1-1-自动格式化代码"><a href="#11-1-1-自动格式化代码" class="headerlink" title="11.1.1 自动格式化代码"></a>11.1.1 自动格式化代码</h3><p>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;Chiel92/vim-autoformat&#x27;</span><br></code></pre></td></tr></table></figure><p><font color="red"><code>_vimrc</code></font>写下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">et <span class="hljs-variable">g:autoformat_autoindent</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:autoformat_retab</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:autoformat_remove_trailing_spaces</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">noremap</span> <span class="hljs-symbol">&lt;F3&gt;</span> :Autoformat<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:autoformat_verbosemode</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="11-1-2-代码高亮"><a href="#11-1-2-代码高亮" class="headerlink" title="11.1.2 代码高亮"></a>11.1.2 代码高亮</h3><p>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;octol/vim-cpp-enhanced-highlight&#x27;</span><br></code></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_class_scope_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_member_variable_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_class_decl_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_experimental_simple_template_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_experimental_template_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_concepts_highlight</span> = <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="11-1-3-代码检查ALE"><a href="#11-1-3-代码检查ALE" class="headerlink" title="11.1.3 代码检查ALE"></a>11.1.3 代码检查ALE</h3><p>见前</p><h2 id="11-2Python的插件"><a href="#11-2Python的插件" class="headerlink" title="11.2Python的插件"></a>11.2Python的插件</h2><h3 id="11-2-1-语言支持"><a href="#11-2-1-语言支持" class="headerlink" title="11.2.1 语言支持"></a>11.2.1 语言支持</h3><p>安装插件</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sml"><span class="hljs-type">Plug</span> <span class="hljs-symbol">&#x27;python</span>-mode/python-mode&#x27;, &#123; <span class="hljs-symbol">&#x27;for&#x27;</span>: <span class="hljs-symbol">&#x27;python&#x27;</span>, <span class="hljs-symbol">&#x27;branch&#x27;</span>: <span class="hljs-symbol">&#x27;develop&#x27;</span> &#125;<br></code></pre></td></tr></table></figure><p>在<font color="red"><code>_vimrc</code></font>写下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot;开启警告</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_warnings</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;保存文件时自动删除无用空格</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_trim_whitespaces</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_options</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;显示允许的最大长度的列</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_options_colorcolumn</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;设置QuickFix窗口的最大，最小高度</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_quickfix_minheight</span> = <span class="hljs-number">3</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_quickfix_maxheight</span> = <span class="hljs-number">10</span><br><span class="hljs-comment">&quot;使用python3</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_python</span> = <span class="hljs-string">&#x27;python3&#x27;</span><br><span class="hljs-comment">&quot;使用PEP8风格的缩进</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_indent</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;取消代码折叠</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_folding</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;开启python-mode定义的移动方式</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_motion</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;启用python-mode内置的python文档，使用K进行查找</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_doc</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_doc_bind</span> = <span class="hljs-string">&#x27;K&#x27;</span><br><span class="hljs-comment">&quot;自动检测并启用virtualenv</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_virtualenv</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;不使用python-mode运行python代码</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_run</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;let g:pymode_run_bind = &#x27;&lt;Leader&gt;r&#x27;</span><br><span class="hljs-comment">&quot;不使用python-mode设置断点</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_breakpoint</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;let g:pymode_breakpoint_bind = &#x27;&lt;leader&gt;b&#x27;</span><br><span class="hljs-comment">&quot;启用python语法检查</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;修改后保存时进行检查</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_on_write</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;编辑时进行检查</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_on_fly</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_checkers</span> = [<span class="hljs-string">&#x27;pyflakes&#x27;</span>, <span class="hljs-string">&#x27;pep8&#x27;</span>]<br><span class="hljs-comment">&quot;发现错误时不自动打开QuickFix窗口</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_cwindow</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;侧边栏不显示python-mode相关的标志</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_signs</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;let g:pymode_lint_todo_symbol = &#x27;WW&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_comment_symbol = &#x27;CC&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_visual_symbol = &#x27;RR&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_error_symbol = &#x27;EE&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_info_symbol = &#x27;II&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_pyflakes_symbol = &#x27;FF&#x27;</span><br><span class="hljs-comment">&quot;启用重构</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;不在父目录下查找.ropeproject，能提升响应速度</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_lookup_project</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;光标下单词查阅文档</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_show_doc_bind</span> = <span class="hljs-string">&#x27;&lt;C-c&gt;d&#x27;</span><br><span class="hljs-comment">&quot;项目修改后重新生成缓存</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_regenerate_on_write</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;开启补全，并设置&lt;C-Tab&gt;为默认快捷键</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_completion</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_complete_on_dot</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_completion_bind</span> = <span class="hljs-string">&#x27;&lt;C-Tab&gt;&#x27;</span><br><span class="hljs-comment">&quot;&lt;C-c&gt;g跳转到定义处，同时新建竖直窗口打开</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_goto_definition_bind</span> = <span class="hljs-string">&#x27;&lt;C-c&gt;g&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_goto_definition_cmd</span> = <span class="hljs-string">&#x27;vnew&#x27;</span><br><span class="hljs-comment">&quot;重命名光标下的函数，方法，变量及类名</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_rename_bind</span> = <span class="hljs-string">&#x27;&lt;C-c&gt;rr&#x27;</span><br><span class="hljs-comment">&quot;重命名光标下的模块或包</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_rename_module_bind</span> = <span class="hljs-string">&#x27;&lt;C-c&gt;r1r&#x27;</span><br><span class="hljs-comment">&quot;开启python所有的语法高亮</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_syntax</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_syntax_all</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;高亮缩进错误</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_syntax_indent_errors</span> = <span class="hljs-variable">g:pymode_syntax_all</span><br><span class="hljs-comment">&quot;高亮空格错误</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_syntax_space_errors</span> = <span class="hljs-variable">g:pymode_syntax_all</span><br></code></pre></td></tr></table></figure><h3 id="11-2-2-代码检查ALE"><a href="#11-2-2-代码检查ALE" class="headerlink" title="11.2.2 代码检查ALE"></a>11.2.2 代码检查ALE</h3><p>见前</p><h2 id="11-3-LaTeX的插件"><a href="#11-3-LaTeX的插件" class="headerlink" title="11.3 LaTeX的插件"></a>11.3 LaTeX的插件</h2><p>安装插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;lervag/vimtex&#x27;</span><br></code></pre></td></tr></table></figure><p>配置文件，F9运行，需要 <font color="red"><code>8. 编译程序</code></font>的代码</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot; Autocomprtr not realize</span><br><span class="hljs-comment">&quot; F9 not drc</span><br><span class="hljs-comment">&quot; add SumatraPDF Path</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:tex_flavor</span>=<span class="hljs-string">&#x27;latex&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vimtex_view_general_viewer</span> = <span class="hljs-string">&#x27;SumatraPDF&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vimtex_view_general_options_latexmk</span> = <span class="hljs-string">&#x27;-reuse-instance&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vimtex_view_general_options</span><br>\ = <span class="hljs-string">&#x27;-reuse-instance -forward-search @tex @line @pdf&#x27;</span><br>\ . <span class="hljs-string">&#x27; -inverse-search &quot;&#x27;</span> . exepath(<span class="hljs-variable">v:progpath</span>)<br>\ . <span class="hljs-string">&#x27; --servername &#x27;</span> . <span class="hljs-variable">v:servername</span><br>\ . <span class="hljs-string">&#x27; --remote-send \&quot;^&lt;C-\^&gt;^&lt;C-n^&gt;&#x27;</span><br>\ . <span class="hljs-string">&#x27;:execute &#x27;</span><span class="hljs-string">&#x27;drop &#x27;</span><span class="hljs-string">&#x27; . fnameescape(&#x27;</span><span class="hljs-string">&#x27;\%f&#x27;</span><span class="hljs-string">&#x27;)^&lt;CR^&gt;&#x27;</span><br>\ . <span class="hljs-string">&#x27;:\%l^&lt;CR^&gt;:normal\! zzzv^&lt;CR^&gt;&#x27;</span><br>\ . <span class="hljs-string">&#x27;:call remote_foreground(&#x27;</span><span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-variable">v:servername</span>.<span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;)^&lt;CR^&gt;^&lt;CR^&gt;\&quot;&quot;&#x27;</span><br><span class="hljs-keyword">set</span> conceallevel=<span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:tex_conceal</span>=<span class="hljs-string">&#x27;abdmg&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="11-4-MarkDown的插件"><a href="#11-4-MarkDown的插件" class="headerlink" title="11.4 MarkDown的插件"></a>11.4 MarkDown的插件</h2><p>我们需要如下插件，并且<font color="blue"> <strong>顺序不能变</strong></font></p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sml"><span class="hljs-type">Plug</span> <span class="hljs-symbol">&#x27;dhruvasagar</span>/vim-table-mode&#x27;<br><span class="hljs-type">Plug</span> <span class="hljs-symbol">&#x27;godlygeek</span>/tabular&#x27;<br><span class="hljs-type">Plug</span> <span class="hljs-symbol">&#x27;mzlogin</span>/vim-markdown-toc&#x27;<br><span class="hljs-type">Plug</span> <span class="hljs-symbol">&#x27;plasticboy</span>/vim-markdown&#x27;<br><span class="hljs-type">Plug</span> <span class="hljs-symbol">&#x27;iamcco</span>/markdown-preview.nvim&#x27;, &#123; <span class="hljs-symbol">&#x27;do&#x27;</span>: &#123; -&gt; mkdp#util#install<span class="hljs-literal">()</span> &#125; &#125;<br><span class="hljs-type">Plug</span> <span class="hljs-symbol">&#x27;ferrine</span>/md-img-paste.vim&#x27;<br></code></pre></td></tr></table></figure><p>后面就不写安装插件了，需要配置的会在后面给出</p><h3 id="11-4-1-MarkDown预览"><a href="#11-4-1-MarkDown预览" class="headerlink" title="11.4.1 MarkDown预览"></a>11.4.1 MarkDown预览</h3><p>配置结束之后请运行<font color="red"><code>:MarkdownPreviewToggel</code></font>激活一次就可以了</p><p>配置写下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vim_markdown_math</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vmt_auto_update_on_save</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:mkdp_path_to_chrome</span> = <span class="hljs-string">&quot;C:\Program Files (x86)\Google\Chrome\Application&quot;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:mkdp_markdown_css</span>=<span class="hljs-string">&#x27;&#x27;</span><br><br></code></pre></td></tr></table></figure><p><font color="red"><code>let g:mkdp_path_to_chrome = &quot;C:\Program Files (x86)\Google\Chrome\Application&quot;</code></font>这里改成Chrome的路径，必须是Chrome</p><h3 id="11-4-2-MarkDown自动输入表格"><a href="#11-4-2-MarkDown自动输入表格" class="headerlink" title="11.4.2 MarkDown自动输入表格"></a>11.4.2 MarkDown自动输入表格</h3><p>用法是创建表格的时候输入<font color="red"><code>||+Esc</code>会自动补全<code>-</code></font>，后面写的表格长之后，前面的会加长</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">let</span> <span class="hljs-variable">g:table_mode_corner</span> = <span class="hljs-string">&#x27;|&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:table_mode_border</span>=<span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:table_mode_fillchar</span>=<span class="hljs-string">&#x27; &#x27;</span><br><br><span class="hljs-keyword">function!</span> <span class="hljs-title">s</span>:isAtStartOfLine<span class="hljs-params">(mapping)</span><br>  <span class="hljs-keyword">let</span> text_before_cursor = <span class="hljs-built_in">getline</span>(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span> : <span class="hljs-keyword">col</span>(<span class="hljs-string">&#x27;.&#x27;</span>)-<span class="hljs-number">1</span>]<br>  <span class="hljs-keyword">let</span> mapping_pattern = <span class="hljs-string">&#x27;\V&#x27;</span> . <span class="hljs-built_in">escape</span>(<span class="hljs-variable">a:mapping</span>, <span class="hljs-string">&#x27;\&#x27;</span>)<br>  <span class="hljs-keyword">let</span> comment_pattern = <span class="hljs-string">&#x27;\V&#x27;</span> . <span class="hljs-built_in">escape</span>(<span class="hljs-keyword">substitute</span>(&amp;<span class="hljs-variable">l:commentstring</span>, <span class="hljs-string">&#x27;%s.*$&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>), <span class="hljs-string">&#x27;\&#x27;</span>)<br>  <span class="hljs-keyword">return</span> (text_before_cursor =~? <span class="hljs-string">&#x27;^&#x27;</span> . (<span class="hljs-string">&#x27;\v(&#x27;</span> . comment_pattern . <span class="hljs-string">&#x27;\v)?&#x27;</span>) . <span class="hljs-string">&#x27;\s*\v&#x27;</span> . mapping_pattern . <span class="hljs-string">&#x27;\v$&#x27;</span>)<br><span class="hljs-keyword">endfunction</span><br><br><span class="hljs-keyword">inoreabbrev</span> <span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;bar&gt;</span><span class="hljs-symbol">&lt;bar&gt;</span><br>          \ <span class="hljs-symbol">&lt;SID&gt;</span>isAtStartOfLine(<span class="hljs-string">&#x27;\|\|&#x27;</span>) ?<br>          \ <span class="hljs-string">&#x27;&lt;c-o&gt;:TableModeEnable&lt;cr&gt;&lt;bar&gt;&lt;space&gt;&lt;bar&gt;&lt;left&gt;&lt;left&gt;&#x27;</span> : <span class="hljs-string">&#x27;&lt;bar&gt;&lt;bar&gt;&#x27;</span><br><span class="hljs-keyword">inoreabbrev</span> <span class="hljs-symbol">&lt;expr&gt;</span> __<br>          \ <span class="hljs-symbol">&lt;SID&gt;</span>isAtStartOfLine(<span class="hljs-string">&#x27;__&#x27;</span>) ?<br>          \ <span class="hljs-string">&#x27;&lt;c-o&gt;:silent! TableModeDisable&lt;cr&gt;&#x27;</span> : <span class="hljs-string">&#x27;__&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="11-5-R语言插件"><a href="#11-5-R语言插件" class="headerlink" title="11.5 R语言插件"></a>11.5 R语言插件</h2><p>我是直接学的这个<br>如果想把Vim 打造成你R的IDE，至少得保证在Vim中能做3件事情</p><ul><li><p>能写代码</p></li><li><p>可以运行当前代码</p></li><li><p>代码联想<br>为了让Vim拥有该功能，你需要装一个插件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Plug</span> <span class="hljs-string">&#x27;jalvesaq/Nvim-R&#x27;</span><br></code></pre></td></tr></table></figure></li></ul><p>用vimmyfile.R打开一个R脚本，输入\rf就可以打开R的终端。可以用\rq关闭终端</p><p><img src="https://img-blog.csdnimg.cn/20200717183540608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>当你能打开如上界面之后，那么我们可以学习一些常用操作了，如下</p><ul><li><p>执行当前文件的所有代码: \aa</p></li><li><p>执行整个函数: \ff</p></li><li><p>执行所选内容: \ss</p></li><li><p>执行当前行: \l</p><p><img src="https://img-blog.csdnimg.cn/20200717183646143.png#pic_center"></p><p><a href="https://github.com/jalvesaq/Nvim-R/blob/master/doc/Nvim-R.txt">完整清单</a></p><p>上面的操作都需要用\作为前置符，为了减少操作，可以将一些常用操作进行映射, 修改”~&#x2F;.vimrc” 添加如下内容</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot; 将执行当前行代码映射为 ,</span><br><span class="hljs-keyword">nmap</span> , <span class="hljs-symbol">&lt;Plug&gt;</span>RDSendLine<br><span class="hljs-comment">&quot; 将执行选择的多行代码映射为 ,</span><br><span class="hljs-keyword">vmap</span> , <span class="hljs-symbol">&lt;Plug&gt;</span>RDSendSelection<br><span class="hljs-comment">&quot; 将执行选择的多行映射并输出内容隐射为 ,e</span><br><span class="hljs-keyword">vmap</span> ,<span class="hljs-keyword">e</span> <span class="hljs-symbol">&lt;Plug&gt;</span>RESendSelection<br></code></pre></td></tr></table></figure></li></ul><p><strong>R全局变量窗口</strong></p><p>Rstudio有一个专门的窗口展示目前的全局环境变量，如下图。<img src="https://img-blog.csdnimg.cn/20200717183719152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>而在vim中用\ro 就可以启动这个功能<img src="https://img-blog.csdnimg.cn/20200717183740513.png#pic_center"></p><p>vim里不同窗口的切换用 ctrl + w + h&#x2F;j&#x2F;k&#x2F;l</p><p><strong>帮助文档窗口</strong><br>写代码的时候，还需要经常的阅读文档，在Rstudio里有专门的窗口<img src="https://img-blog.csdnimg.cn/20200717183754428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>在Vim则是用\rh查看帮助文档, 用 \re查看示例<img src="https://img-blog.csdnimg.cn/20200717183815434.png#pic_center"></p><p><strong>查看数据</strong><br>还可以像Rstudio一样查看数据库中的内容，在对象上输入\rv, 在Linux上需要先安装插件”chrisbra&#x2F;csv.vim”<img src="https://img-blog.csdnimg.cn/20200717183846177.png#pic_center"></p><p><strong>代码补全</strong><br>代码补全依赖于一个更好的工具ncm-R, 但是安装起来特别的费劲，花了一个下午的时间都没有搞定，所以我放弃了。</p><p><strong>其他使用操作</strong></p><ul><li>设置当前文件夹为工作目录: \rd</li><li>输出运行结果作为注释: \o</li><li>对变量summary() 对应 \rs</li><li>对变量plot() 对应 \rg (服务器端别想了)</li><li>查看一个变量的列名对应 \rn</li><li>&lt;- 的对应”_”</li></ul><hr><h1 id="12-处理ESC"><a href="#12-处理ESC" class="headerlink" title="12. 处理ESC"></a>12. 处理ESC</h1><p>正如你所发现，我们需要平凡的切换到Normal模式，但是Esc键离手太远了，但是离的近的CapLock又没啥用，所以思路是把CapLock映射为Esc，Esc映射到CapLock，但是CapLock这个键特别特殊，只有Windows自己可以捕获他被按下，其他所有软件都不行(从来没见过CapLock做快捷键的)，所以通过修改注册编辑表来实现<br>将下面代码保存为 capslock2esc.reg：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">Windows Registry Editor Version <span class="hljs-number">5</span>.<span class="hljs-number">00</span><br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]<br>&quot;Scancode Map&quot;=hex:<span class="hljs-number">00,00,00,00</span>,<span class="hljs-number">00,00,00,00</span>,<span class="hljs-number">02,00,00,00</span>,<span class="hljs-number">01</span>,<span class="hljs-number">00</span>,<span class="hljs-number">3</span>a,<span class="hljs-number">00,00,00,00</span>,<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><p>注：上面不是互换，如果要互换，则用下面代码：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">Windows Registry Editor Version <span class="hljs-number">5</span>.<span class="hljs-number">00</span><br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]<br>&quot;Scancode Map&quot;=hex:<span class="hljs-number">00,00,00,00</span>,<span class="hljs-number">00,00,00,00</span>,<span class="hljs-number">03,00,00,00</span>,<span class="hljs-number">3</span>a,<span class="hljs-number">00,01,00,01</span>,<span class="hljs-number">00</span>,<span class="hljs-number">3</span>a,<span class="hljs-number">00,00,00,00</span>,<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><p>还原按键时，只需要在注册表的路径([HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout])下，删除Scancode Map键即可。<br>反正用惯巨好用。</p><hr><h1 id="13-Vim-键位图"><a href="#13-Vim-键位图" class="headerlink" title="13. Vim 键位图"></a>13. Vim 键位图</h1><p><img src="https://img-blog.csdnimg.cn/20200717190306155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p>​<img src="https://img-blog.csdnimg.cn/20200717190305908.gif"></p><p><img src="https://img-blog.csdnimg.cn/20200717190305260.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200717190305253.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200717190304603.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xpdWthaXJ1aQ==,size_16,color_FFFFFF,t_70"></p><h1 id="14-优秀的参考与学习资源"><a href="#14-优秀的参考与学习资源" class="headerlink" title="14. 优秀的参考与学习资源"></a>14. 优秀的参考与学习资源</h1><ol><li><a href="https://www.osvim.org/index.html">Vim中文社区</a></li><li><a href="https://github.com/vim-china">Vim中国论坛</a></li><li><a href="https://www.runoob.com/linux/linux-vim.html">菜鸟教程</a></li><li><a href="https://github.com/yangyangwithgnu/use_vim_as_ide">所需即所获：像 IDE 一样使用 vim</a></li></ol><p>好多都没保存，我慢慢补</p><h1 id="15-我的Vim配置"><a href="#15-我的Vim配置" class="headerlink" title="15. 我的Vim配置"></a>15. 我的Vim配置</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot;====================================</span><br><span class="hljs-comment">&quot;===  Basic setting for vim use   ===</span><br><span class="hljs-comment">&quot;====================================</span><br><span class="hljs-keyword">set</span> encoding=utf-<span class="hljs-number">8</span>                  <span class="hljs-comment">&quot;Encoding UTF-8, to use Gvim correct</span><br><span class="hljs-string">&quot;let &amp;pythondll=&#x27;&#x27;                  &quot;</span>sup <span class="hljs-keyword">python</span> just use same bit &amp; ignore this<br><span class="hljs-string">&quot;let &amp;pythonhome=&#x27;&#x27;                 &quot;</span>Python <span class="hljs-number">2</span>&amp;<span class="hljs-number">3</span> <span class="hljs-keyword">only</span> choose <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;let &amp;pythonthreedll=&#x27;C:\Program Files (x86)\Python36-32\python36.dll&#x27;</span><br><span class="hljs-comment">&quot;let &amp;pythonthreehome=&#x27;C:\Program Files (x86)\Python36-32&#x27;</span><br><span class="hljs-keyword">syntax</span> <span class="hljs-keyword">on</span>                           <span class="hljs-comment">&quot;hilight_base</span><br><span class="hljs-keyword">let</span> mapleader = <span class="hljs-string">&quot;\&lt;space&gt;&quot;</span>          <span class="hljs-comment">&quot;change leader key</span><br><span class="hljs-keyword">language</span> C                          <span class="hljs-comment">&quot;Using English</span><br><span class="hljs-keyword">set</span> nocompatible                    <span class="hljs-comment">&quot;Compaty vi..</span><br><span class="hljs-keyword">filetype</span> <span class="hljs-keyword">on</span><br><span class="hljs-keyword">filetype</span> <span class="hljs-built_in">indent</span> <span class="hljs-keyword">on</span><br><span class="hljs-keyword">filetype</span> plugin <span class="hljs-keyword">on</span><br><span class="hljs-keyword">set</span> mouse=<span class="hljs-keyword">a</span>                         <span class="hljs-comment">&quot;Mouse enable</span><br><span class="hljs-keyword">let</span> &amp;t_ut=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">set</span> expandtab                       <span class="hljs-comment">&quot;Convent Tab to space</span><br><span class="hljs-keyword">set</span> tabstop=<span class="hljs-number">4</span><span class="hljs-comment">&quot;Tab config</span><br><span class="hljs-keyword">set</span> <span class="hljs-built_in">shiftwidth</span>=<span class="hljs-number">4</span><br><span class="hljs-keyword">set</span> softtabstop=<span class="hljs-number">4</span><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">list</span><span class="hljs-comment">&quot;Show &#x27;$&#x27; at cursor</span><br><span class="hljs-keyword">set</span> listchars=<span class="hljs-keyword">tab</span>:▸\ ,trail:▫<span class="hljs-comment">&quot;Show Tab &amp; space</span><br><span class="hljs-keyword">set</span> scrolloff=<span class="hljs-number">5</span><span class="hljs-comment">&quot;At least n row before/after cursor</span><br><span class="hljs-keyword">set</span> backspace=<span class="hljs-built_in">indent</span>,eol,start<span class="hljs-comment">&quot;Let Backspace cross row</span><br><span class="hljs-keyword">set</span> foldmethod=<span class="hljs-built_in">indent</span><span class="hljs-comment">&quot;fold</span><br><span class="hljs-keyword">set</span> <span class="hljs-built_in">foldlevel</span>=<span class="hljs-number">99</span><br><span class="hljs-keyword">let</span> &amp;t_SI = <span class="hljs-string">&quot;\&lt;Esc&gt;]50;CursorShape=1\x7&quot;</span><span class="hljs-comment">&quot;Theme of cursor</span><br><span class="hljs-keyword">let</span> &amp;t_SR = <span class="hljs-string">&quot;\&lt;Esc&gt;]50;CursorShape=2\x7&quot;</span><br><span class="hljs-keyword">let</span> &amp;t_EI = <span class="hljs-string">&quot;\&lt;Esc&gt;]50;CursorShape=0\x7&quot;</span><br><span class="hljs-keyword">set</span> laststatus=<span class="hljs-number">2</span><span class="hljs-comment">&quot;Always show Status bar</span><br><span class="hljs-string">&quot;au BufReadPost * if line(&quot;</span><span class="hljs-string">&#x27;&#x27;</span>\<span class="hljs-string">&quot;&quot;</span>) &gt; <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-built_in">line</span>(<span class="hljs-string">&quot;&#x27;\&quot;&quot;</span>) &lt;= <span class="hljs-built_in">line</span>(<span class="hljs-string">&quot;$&quot;</span>) | <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;normal! g&#x27;\&quot;&quot;</span> | <span class="hljs-keyword">endif</span>.<span class="hljs-comment">&quot;Save postion of cursor</span><br><span class="hljs-keyword">set</span> autoindent<span class="hljs-comment">&quot;ident</span><br><br><span class="hljs-comment">&quot;====================================</span><br><span class="hljs-comment">&quot;===  editor  =======================</span><br><span class="hljs-comment">&quot;====================================</span><br><span class="hljs-keyword">set</span> guifont=Powerline_Consola<span class="hljs-variable">s:h12</span>:cANSI:qDRAFT<span class="hljs-comment">&quot;NeoVim not support</span><br><span class="hljs-string">&quot;:call libcallnr(&quot;</span>vimtweak64.dll<span class="hljs-string">&quot;, &quot;</span>SetAlpha<span class="hljs-comment">&quot;, 250)</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;silent&gt;</span> <span class="hljs-symbol">&lt;F2&gt;</span> :<span class="hljs-keyword">if</span> &amp;guioptions =~# <span class="hljs-string">&#x27;T&#x27;</span> <span class="hljs-symbol">&lt;Bar&gt;</span><br>\<span class="hljs-keyword">set</span> guioptions-=T <span class="hljs-symbol">&lt;Bar&gt;</span><br>\<span class="hljs-keyword">set</span> guioptions-=<span class="hljs-keyword">m</span> <span class="hljs-symbol">&lt;bar&gt;</span><br>\<span class="hljs-keyword">else</span> <span class="hljs-symbol">&lt;Bar&gt;</span><br>\<span class="hljs-keyword">set</span> guioptions =T <span class="hljs-symbol">&lt;Bar&gt;</span><br>\<span class="hljs-keyword">set</span> guioptions =<span class="hljs-keyword">m</span> <span class="hljs-symbol">&lt;Bar&gt;</span><br>\<span class="hljs-keyword">endif</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">set</span> guioptions-=<span class="hljs-keyword">m</span>   <span class="hljs-comment">&quot;Hide Menu</span><br><span class="hljs-keyword">set</span> guioptions-=T   <span class="hljs-comment">&quot;Hide Tool-Bar</span><br><span class="hljs-keyword">set</span> guioptions-=r   <span class="hljs-comment">&quot;hide right scroll</span><br><span class="hljs-keyword">set</span> guioptions-=<span class="hljs-keyword">b</span>   <span class="hljs-comment">&quot;hide buttom scoll</span><br><span class="hljs-keyword">set</span> guioptions-=L   <span class="hljs-comment">&quot;hide left scroll</span><br><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">number</span><span class="hljs-comment">&quot;row number</span><br><span class="hljs-keyword">set</span> relativenumber<span class="hljs-comment">&quot;relative row number</span><br><span class="hljs-keyword">set</span> cursorline<span class="hljs-comment">&quot;hilight line cursor</span><br><span class="hljs-keyword">set</span> cursorcolumn<span class="hljs-comment">&quot;hilight colum cursor</span><br><span class="hljs-keyword">set</span> wrap<span class="hljs-comment">&quot;autowrap</span><br><span class="hljs-keyword">set</span> showcmd<span class="hljs-comment">&quot;show point out</span><br><span class="hljs-keyword">set</span> wildmenu<br><span class="hljs-keyword">set</span> hlsearch<span class="hljs-comment">&quot;search hilight</span><br>exec <span class="hljs-string">&quot;nohlsearch&quot;</span><br><span class="hljs-keyword">set</span> incsearch<span class="hljs-comment">&quot;real time search hilight</span><br><span class="hljs-keyword">set</span> ignorecase<span class="hljs-comment">&quot;ignore text-transform</span><br><span class="hljs-keyword">set</span> smartcase<span class="hljs-comment">&quot;smart text-transform</span><br><br><span class="hljs-keyword">vnoremap</span> <span class="hljs-symbol">&lt;Leader&gt;</span><span class="hljs-keyword">y</span> <span class="hljs-comment">&quot;+y</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;Leader&gt;</span><span class="hljs-keyword">p</span> <span class="hljs-comment">&quot;+p</span><br><span class="hljs-keyword">map</span> rc : <span class="hljs-keyword">e</span> $HOME\_vimrc<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> S : <span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> s <span class="hljs-symbol">&lt;nop&gt;</span><br><span class="hljs-keyword">map</span> Q :q<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> R :<span class="hljs-keyword">source</span> $MYVIMRC<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">noremap</span> <span class="hljs-symbol">&lt;LEADER&gt;</span><span class="hljs-symbol">&lt;CR&gt;</span>  :<span class="hljs-keyword">nohlsearch</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> spl :<span class="hljs-keyword">set</span> splitright<span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">vsplit</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> sph :<span class="hljs-keyword">set</span> nosplitright<span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">vsplit</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> spj :<span class="hljs-keyword">set</span> splitbelow<span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">split</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> spk :<span class="hljs-keyword">set</span> nosplitbelow<span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">split</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-h&gt;</span> <span class="hljs-symbol">&lt;C-w&gt;</span>h<br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-j&gt;</span> <span class="hljs-symbol">&lt;C-w&gt;</span><span class="hljs-keyword">j</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-k&gt;</span> <span class="hljs-symbol">&lt;C-w&gt;</span><span class="hljs-keyword">k</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-l&gt;</span> <span class="hljs-symbol">&lt;C-w&gt;</span><span class="hljs-keyword">l</span><br><span class="hljs-keyword">map</span> &lt;A-=&gt; :<span class="hljs-keyword">vertical</span> <span class="hljs-keyword">resize</span>+<span class="hljs-number">5</span> <span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A--&gt;</span> :<span class="hljs-keyword">vertical</span> <span class="hljs-keyword">resize</span>-<span class="hljs-number">5</span> <span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> &lt;A-+&gt; :<span class="hljs-keyword">resize</span>+<span class="hljs-number">5</span> <span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-_&gt;</span> :<span class="hljs-keyword">resize</span>-<span class="hljs-number">5</span> <span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> <span class="hljs-keyword">sv</span> <span class="hljs-symbol">&lt;C-w&gt;</span>t<span class="hljs-symbol">&lt;c-W&gt;</span>H<br><span class="hljs-keyword">map</span> <span class="hljs-keyword">sv</span> <span class="hljs-symbol">&lt;C-w&gt;</span>t<span class="hljs-symbol">&lt;c-W&gt;</span>K<br><br><span class="hljs-keyword">map</span> <span class="hljs-keyword">tu</span> :<span class="hljs-keyword">tabe</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> <span class="hljs-keyword">tc</span> :<span class="hljs-keyword">tabc</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-comment">&quot; Move around tabs with tn and ti</span><br><span class="hljs-keyword">map</span> <span class="hljs-keyword">tp</span> :-<span class="hljs-keyword">tabnext</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> <span class="hljs-keyword">tn</span> :+<span class="hljs-keyword">tabnext</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-comment">&quot; Move the tabs with tmn and tmi</span><br><span class="hljs-keyword">map</span> tmn :-<span class="hljs-keyword">tabmove</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span> tmi :+<span class="hljs-keyword">tabmove</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-comment">&quot;jump ])&#125;</span><br><span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;C-l&gt;</span> <span class="hljs-symbol">&lt;Right&gt;</span><br><br><span class="hljs-comment">&quot;====================================</span><br><span class="hljs-comment">&quot;=== Processer ======================</span><br><span class="hljs-comment">&quot;====================================</span><br><span class="hljs-keyword">map</span>  <span class="hljs-symbol">&lt;F9&gt;</span>  :<span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">call</span> Run()<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">imap</span> <span class="hljs-symbol">&lt;F9&gt;</span>  <span class="hljs-symbol">&lt;ESC&gt;</span>:<span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">call</span> Run()<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">map</span>  <span class="hljs-symbol">&lt;F10&gt;</span> :<span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">call</span> Debug()<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">imap</span> <span class="hljs-symbol">&lt;F10&gt;</span> <span class="hljs-symbol">&lt;ESC&gt;</span>:<span class="hljs-keyword">w</span><span class="hljs-symbol">&lt;CR&gt;</span>:<span class="hljs-keyword">call</span> Debug()<span class="hljs-symbol">&lt;CR&gt;</span><br><br>func!  Debug()<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;c&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cc&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cxx&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cpp&quot;</span><br>        <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;:setlocal makeprg=&quot;</span>.<span class="hljs-string">&#x27;g++\ %\ -o\ %&lt;\ -gstabs+&#x27;</span><br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; compiling...&quot;</span><br>        <span class="hljs-keyword">silent</span> <span class="hljs-keyword">make</span><br>        <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;:!gdb %&lt;&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Debug finish! :-)&quot;</span><br>    <span class="hljs-keyword">else</span><br>        redraw!<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Language not support! :-(&quot;</span><br>    <span class="hljs-keyword">endif</span><br>endfunc<br><br>func! Run()<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;py&quot;</span><br>        ! Python -<span class="hljs-keyword">u</span> <span class="hljs-string">&quot;%&lt;.py&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;c&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cc&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cxx&quot;</span> || <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;cpp&quot;</span><br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; compiling...&quot;</span><br>        :! g++ <span class="hljs-string">&quot;%&quot;</span> -<span class="hljs-keyword">o</span> <span class="hljs-string">&quot;%&lt;&quot;</span> &amp;&amp; <span class="hljs-string">&quot;%&lt;.exe&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;r&quot;</span><br>        <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;:! Rscript %&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;vbs&quot;</span><br>        <span class="hljs-keyword">exe</span> <span class="hljs-string">&quot;:! %&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running finish! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;md&quot;</span><br>        :MarkdownPreview<br>        redraw!<br>        <span class="hljs-keyword">echohl</span> WarningMsg | <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot; Running on Chrome! :-)&quot;</span><br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&quot;tex&quot;</span><br>        <span class="hljs-comment">&quot;&lt;localleader&gt;ll</span><br>        \\<span class="hljs-keyword">ll</span><br>        <span class="hljs-comment">&quot;:vimtex-compile</span><br>    <span class="hljs-keyword">else</span><br>        redraw!<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Language not support! :-(&quot;</span><br>    <span class="hljs-keyword">endif</span><br><span class="hljs-keyword">endfunction</span><br><br><span class="hljs-comment">&quot;====================================</span><br><span class="hljs-comment">&quot;=== Plug config ====================</span><br><span class="hljs-comment">&quot;====================================</span><br><span class="hljs-comment">&quot;------- xkb-switch --------</span><br><span class="hljs-comment">&quot;copy dll to $VIM, and note bit</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:XkbSwitchEnabled</span>     = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:XkbSwitchIMappings</span>   = [<span class="hljs-string">&#x27;cn&#x27;</span>]<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:XkbSwitchIMappingsTr</span> = &#123;<span class="hljs-string">&#x27;cn&#x27;</span>: &#123;<span class="hljs-string">&#x27;&lt;&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&gt;&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;&#125;<br><br><span class="hljs-comment">&quot;------- ondotree ----------</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;F5&gt;</span> :UndotreeToggle<span class="hljs-symbol">&lt;CR&gt;</span><br><br><span class="hljs-comment">&quot;------- NERDTreeToggle ----</span><br><span class="hljs-keyword">map</span> ff :NERDTreeToggle<span class="hljs-symbol">&lt;CR&gt;</span><br><br><span class="hljs-comment">&quot;------- Airline -----------</span><br><span class="hljs-string">&quot;set ambiwidth=double                    &quot;</span> 设置为双字宽显示，否则无法完整显示如:☆<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_theme</span>=<span class="hljs-string">&#x27;bubblegum&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_powerline_fonts</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot; 开启tabline</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline</span>#extensions#tabline#enabled = <span class="hljs-number">1</span>      <span class="hljs-comment">&quot;tabline中当前buffer两端的分隔字符</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline</span>#extensions#tabline#left_sep = <span class="hljs-string">&#x27; &#x27;</span>   <span class="hljs-comment">&quot;tabline中未激活buffer两端的分隔字符</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline</span>#extensions#tabline#left_alt_sep = <span class="hljs-string">&#x27;|&#x27;</span>      <span class="hljs-comment">&quot;tabline中buffer显示编号</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline</span>#extensions#tabline#buffer_nr_show = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot; 映射切换buffer的键位</span><br><span class="hljs-keyword">nnoremap</span> [<span class="hljs-keyword">b</span> :<span class="hljs-keyword">bp</span><span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">nnoremap</span> ]<span class="hljs-keyword">b</span> :<span class="hljs-keyword">bn</span><span class="hljs-symbol">&lt;CR&gt;</span><br><br><span class="hljs-comment">&quot;------- vim-autodormat ----</span><br><span class="hljs-comment">&quot;python need</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:autoformat_autoindent</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:autoformat_retab</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:autoformat_remove_trailing_spaces</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">noremap</span> <span class="hljs-symbol">&lt;F3&gt;</span> :Autoformat<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:autoformat_verbosemode</span>=<span class="hljs-number">1</span><br><br><span class="hljs-comment">&quot;------- nerdcommenter -----</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;C-m&gt;</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">cc</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;A-m&gt;</span> <span class="hljs-symbol">&lt;leader&gt;</span><span class="hljs-keyword">cu</span><br><span class="hljs-keyword">unmap</span> <span class="hljs-symbol">&lt;CR&gt;</span><br><br><span class="hljs-comment">&quot; 1. vscode defult 2. author defult 3. vscode show</span><br><span class="hljs-comment">&quot;\&#x27;guifgs&#x27;: [&#x27;#B21212&#x27;, &#x27;#1B9CED&#x27;,&#x27;#FFFC00&#x27;],</span><br><span class="hljs-comment">&quot;\&#x27;guifgs&#x27;: [&#x27;royalblue3&#x27;, &#x27;darkorange3&#x27;, &#x27;seagreen3&#x27;, &#x27;firebrick&#x27;],</span><br><span class="hljs-comment">&quot;\&#x27;guifgs&#x27;: [&#x27;#C186BF&#x27;, &#x27;#268EDB&#x27;,&#x27;#F79318&#x27;],</span><br><span class="hljs-comment">&quot;------- Rainbow -----------</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:rainbow_conf</span> = &#123;<br>\<span class="hljs-string">&#x27;guifgs&#x27;</span>: [<span class="hljs-string">&#x27;#C186BF&#x27;</span>, <span class="hljs-string">&#x27;#268EDB&#x27;</span>,<span class="hljs-string">&#x27;#F79318&#x27;</span>],<br>\<span class="hljs-string">&#x27;ctermfgs&#x27;</span>: [<span class="hljs-string">&#x27;lightblue&#x27;</span>, <span class="hljs-string">&#x27;lightyellow&#x27;</span>, <span class="hljs-string">&#x27;lightcyan&#x27;</span>, <span class="hljs-string">&#x27;lightmagenta&#x27;</span>],<br>\<span class="hljs-string">&#x27;operators&#x27;</span>: <span class="hljs-string">&#x27;_,_&#x27;</span>,<br>\<span class="hljs-string">&#x27;parentheses&#x27;</span>: [<span class="hljs-string">&#x27;start=/(/ end=/)/ fold&#x27;</span>, <span class="hljs-string">&#x27;start=/\[/ end=/\]/ fold&#x27;</span>, <span class="hljs-string">&#x27;start=/&#123;/ end=/&#125;/ fold&#x27;</span>],<br>\<span class="hljs-string">&#x27;separately&#x27;</span>: &#123;<br>\<span class="hljs-string">&#x27;*&#x27;</span>: &#123;&#125;,<br>\<span class="hljs-string">&#x27;tex&#x27;</span>: &#123;<br>\<span class="hljs-string">&#x27;parentheses&#x27;</span>: [<span class="hljs-string">&#x27;start=/(/ end=/)/&#x27;</span>, <span class="hljs-string">&#x27;start=/\[/ end=/\]/&#x27;</span>],<br>\&#125;,<br>\<span class="hljs-string">&#x27;lisp&#x27;</span>: &#123;<br>\<span class="hljs-string">&#x27;guifgs&#x27;</span>: [<span class="hljs-string">&#x27;royalblue3&#x27;</span>, <span class="hljs-string">&#x27;darkorange3&#x27;</span>, <span class="hljs-string">&#x27;seagreen3&#x27;</span>, <span class="hljs-string">&#x27;firebrick&#x27;</span>, <span class="hljs-string">&#x27;darkorchid3&#x27;</span>],<br>\&#125;,<br>\<span class="hljs-string">&#x27;vim&#x27;</span>: &#123;<br>\<span class="hljs-string">&#x27;parentheses&#x27;</span>: [<span class="hljs-string">&#x27;start=/(/ end=/)/&#x27;</span>, <span class="hljs-string">&#x27;start=/\[/ end=/\]/&#x27;</span>, <span class="hljs-string">&#x27;start=/&#123;/ end=/&#125;/ fold&#x27;</span>, <span class="hljs-string">&#x27;start=/(/ end=/)/ containedin=vimFuncBody&#x27;</span>, <span class="hljs-string">&#x27;start=/\[/ end=/\]/ containedin=vimFuncBody&#x27;</span>, <span class="hljs-string">&#x27;start=/&#123;/ end=/&#125;/ fold containedin=vimFuncBody&#x27;</span>],<br>\&#125;,<br>\<span class="hljs-string">&#x27;html&#x27;</span>: &#123;<br>\<span class="hljs-string">&#x27;parentheses&#x27;</span>: [<span class="hljs-string">&#x27;start=/\v\&lt;((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ &gt;])@!\z([-_:a-zA-Z0-9]+)(\s+[-_:a-zA-Z0-9]+(\=(&quot;[^&quot;]*&quot;|&#x27;</span>.<span class="hljs-string">&quot;&#x27;&quot;</span>.<span class="hljs-string">&#x27;[^&#x27;</span>.<span class="hljs-string">&quot;&#x27;&quot;</span>.<span class="hljs-string">&#x27;]*&#x27;</span>.<span class="hljs-string">&quot;&#x27;&quot;</span>.<span class="hljs-string">&#x27;|[^ &#x27;</span>.<span class="hljs-string">&quot;&#x27;&quot;</span>.<span class="hljs-string">&#x27;&quot;&gt;&lt;=`]*))?)*\&gt;/ end=#&lt;/\z1&gt;# fold&#x27;</span>],<br>\&#125;,<br>\<span class="hljs-string">&#x27;css&#x27;</span>: <span class="hljs-number">0</span>,<br>\&#125;<br>\&#125;<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:rainbow_active</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;------- ALE ---------------</span><br><span class="hljs-comment">&quot;if need change airline icon:</span><br><span class="hljs-comment">&quot;   open ~/.vim/plugged/vim-airline/autoload/airline/extensions/ale.vim and replace</span><br><span class="hljs-comment">&quot;   let error_symbol = get(g:, &#x27;airline#extensions#ale#error_symbol&#x27;, &#x27;😡&#x27;)</span><br><span class="hljs-comment">&quot;   let warning_symbol = get(g:, &#x27;airline#extensions#ale#warning_symbol&#x27;, &#x27;📛:&#x27;)</span><br><span class="hljs-comment">&quot;始终开启标志列</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_sign_column_always</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_set_highlights</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;自定义error和warning图标</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_sign_error</span> = <span class="hljs-string">&#x27;❌&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_sign_warning</span> = <span class="hljs-string">&#x27;🔰&#x27;</span><br><span class="hljs-comment">&quot;在vim自带的状态栏中整合ale</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_statusline_format</span> = [<span class="hljs-string">&#x27;✗ %d&#x27;</span>, <span class="hljs-string">&#x27;⚡ %d&#x27;</span>, <span class="hljs-string">&#x27;✔ OK&#x27;</span>]<br><span class="hljs-comment">&quot;显示Linter名称,出错或警告等相关信息</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_echo_msg_error_str</span> = <span class="hljs-string">&#x27;E&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_echo_msg_warning_str</span> = <span class="hljs-string">&#x27;W&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_echo_msg_format</span> = <span class="hljs-string">&#x27;[%linter%] %s [%severity%]&#x27;</span><br><span class="hljs-comment">&quot;普通模式下，sp前往上一个错误或警告，sn前往下一个错误或警告</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-keyword">sp</span> <span class="hljs-symbol">&lt;Plug&gt;</span>(ale_previous_wrap)<br><span class="hljs-keyword">nmap</span> <span class="hljs-keyword">sn</span> <span class="hljs-symbol">&lt;Plug&gt;</span>(ale_next_wrap)<br><span class="hljs-comment">&quot;&lt;Leader&gt;s触发/关闭语法检查</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;Leader&gt;</span>s :ALEToggle<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-comment">&quot;&lt;Leader&gt;d查看错误或警告的详细信息</span><br><span class="hljs-keyword">nmap</span> <span class="hljs-symbol">&lt;Leader&gt;</span>d :ALEDetail<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-string">&quot;set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;</span>)&#125;\ %&#123;ALEGetStatusLine()&#125;<br><span class="hljs-comment">&quot;cpp NOT C++</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ale_linters</span> = &#123;<br>\   <span class="hljs-string">&#x27;cpp&#x27;</span>: [<span class="hljs-string">&#x27;gcc&#x27;</span>],<br>\   <span class="hljs-string">&#x27;c&#x27;</span>: [<span class="hljs-string">&#x27;gcc&#x27;</span>],<br>\   <span class="hljs-string">&#x27;python&#x27;</span>: [<span class="hljs-string">&#x27;pylint&#x27;</span>],<br>\&#125;<br><br><span class="hljs-comment">&quot;------- MarkDown ----------</span><br><span class="hljs-comment">&quot;first use :MarkdownPreviewToggel  to wake Plug</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vim_markdown_math</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vmt_auto_update_on_save</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:mkdp_path_to_chrome</span> = <span class="hljs-string">&quot;C:\Program Files (x86)\Google\Chrome\Application&quot;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:mkdp_markdown_css</span>=<span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment">&quot;------- MDTable -----------</span><br><span class="hljs-comment">&quot;||+esc</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:table_mode_corner</span> = <span class="hljs-string">&#x27;|&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:table_mode_border</span>=<span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:table_mode_fillchar</span>=<span class="hljs-string">&#x27; &#x27;</span><br><br><span class="hljs-keyword">function!</span> <span class="hljs-title">s</span>:isAtStartOfLine<span class="hljs-params">(mapping)</span><br>  <span class="hljs-keyword">let</span> text_before_cursor = <span class="hljs-built_in">getline</span>(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span> : <span class="hljs-keyword">col</span>(<span class="hljs-string">&#x27;.&#x27;</span>)-<span class="hljs-number">1</span>]<br>  <span class="hljs-keyword">let</span> mapping_pattern = <span class="hljs-string">&#x27;\V&#x27;</span> . <span class="hljs-built_in">escape</span>(<span class="hljs-variable">a:mapping</span>, <span class="hljs-string">&#x27;\&#x27;</span>)<br>  <span class="hljs-keyword">let</span> comment_pattern = <span class="hljs-string">&#x27;\V&#x27;</span> . <span class="hljs-built_in">escape</span>(<span class="hljs-keyword">substitute</span>(&amp;<span class="hljs-variable">l:commentstring</span>, <span class="hljs-string">&#x27;%s.*$&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>), <span class="hljs-string">&#x27;\&#x27;</span>)<br>  <span class="hljs-keyword">return</span> (text_before_cursor =~? <span class="hljs-string">&#x27;^&#x27;</span> . (<span class="hljs-string">&#x27;\v(&#x27;</span> . comment_pattern . <span class="hljs-string">&#x27;\v)?&#x27;</span>) . <span class="hljs-string">&#x27;\s*\v&#x27;</span> . mapping_pattern . <span class="hljs-string">&#x27;\v$&#x27;</span>)<br><span class="hljs-keyword">endfunction</span><br><br><span class="hljs-keyword">inoreabbrev</span> <span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;bar&gt;</span><span class="hljs-symbol">&lt;bar&gt;</span><br>          \ <span class="hljs-symbol">&lt;SID&gt;</span>isAtStartOfLine(<span class="hljs-string">&#x27;\|\|&#x27;</span>) ?<br>          \ <span class="hljs-string">&#x27;&lt;c-o&gt;:TableModeEnable&lt;cr&gt;&lt;bar&gt;&lt;space&gt;&lt;bar&gt;&lt;left&gt;&lt;left&gt;&#x27;</span> : <span class="hljs-string">&#x27;&lt;bar&gt;&lt;bar&gt;&#x27;</span><br><span class="hljs-keyword">inoreabbrev</span> <span class="hljs-symbol">&lt;expr&gt;</span> __<br>          \ <span class="hljs-symbol">&lt;SID&gt;</span>isAtStartOfLine(<span class="hljs-string">&#x27;__&#x27;</span>) ?<br>          \ <span class="hljs-string">&#x27;&lt;c-o&gt;:silent! TableModeDisable&lt;cr&gt;&#x27;</span> : <span class="hljs-string">&#x27;__&#x27;</span><br><br><span class="hljs-comment">&quot;------- LaTeX -------------</span><br><span class="hljs-comment">&quot; Autocomprtr not realize</span><br><span class="hljs-comment">&quot; F9 not drc</span><br><span class="hljs-comment">&quot; add SumatraPDF Path</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:tex_flavor</span>=<span class="hljs-string">&#x27;latex&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vimtex_view_general_viewer</span> = <span class="hljs-string">&#x27;SumatraPDF&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vimtex_view_general_options_latexmk</span> = <span class="hljs-string">&#x27;-reuse-instance&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:vimtex_view_general_options</span><br>\ = <span class="hljs-string">&#x27;-reuse-instance -forward-search @tex @line @pdf&#x27;</span><br>\ . <span class="hljs-string">&#x27; -inverse-search &quot;&#x27;</span> . exepath(<span class="hljs-variable">v:progpath</span>)<br>\ . <span class="hljs-string">&#x27; --servername &#x27;</span> . <span class="hljs-variable">v:servername</span><br>\ . <span class="hljs-string">&#x27; --remote-send \&quot;^&lt;C-\^&gt;^&lt;C-n^&gt;&#x27;</span><br>\ . <span class="hljs-string">&#x27;:execute &#x27;</span><span class="hljs-string">&#x27;drop &#x27;</span><span class="hljs-string">&#x27; . fnameescape(&#x27;</span><span class="hljs-string">&#x27;\%f&#x27;</span><span class="hljs-string">&#x27;)^&lt;CR^&gt;&#x27;</span><br>\ . <span class="hljs-string">&#x27;:\%l^&lt;CR^&gt;:normal\! zzzv^&lt;CR^&gt;&#x27;</span><br>\ . <span class="hljs-string">&#x27;:call remote_foreground(&#x27;</span><span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-variable">v:servername</span>.<span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;)^&lt;CR^&gt;^&lt;CR^&gt;\&quot;&quot;&#x27;</span><br><span class="hljs-keyword">set</span> conceallevel=<span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:tex_conceal</span>=<span class="hljs-string">&#x27;abdmg&#x27;</span><br><br><span class="hljs-comment">&quot;------- YCM ---------------</span><br><span class="hljs-keyword">set</span> runtimepath+=~/.<span class="hljs-keyword">vim</span>/plugged/YouCompleteMe<br><span class="hljs-keyword">autocmd</span> InsertLeave * <span class="hljs-keyword">if</span> <span class="hljs-built_in">pumvisible</span>() == <span class="hljs-number">0</span>|<span class="hljs-keyword">pclose</span>|<span class="hljs-keyword">endif</span> <span class="hljs-string">&quot;离开插入模式后自动关闭预览窗口&quot;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_collect_identifiers_from_tags_files</span> = <span class="hljs-number">1</span>           <span class="hljs-comment">&quot; 开启 YCM基于标签引擎</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_collect_identifiers_from_comments_and_strings</span> = <span class="hljs-number">1</span> <span class="hljs-comment">&quot; 注释与字符串中的内容也用于补全</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:syntastic_ignore_files</span>=[<span class="hljs-string">&quot;.*\.py$&quot;</span>]<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_seed_identifiers_with_syntax</span> = <span class="hljs-number">1</span>                  <span class="hljs-comment">&quot; 语法关键字补全</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_complete_in_comments</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_confirm_extra_conf</span> = <span class="hljs-number">0</span>                            <span class="hljs-comment">&quot; 关闭加载.ycm_extra_conf.py提示</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_key_list_select_completion</span> = [<span class="hljs-string">&#x27;&lt;c-n&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;Down&gt;&#x27;</span>]  <span class="hljs-comment">&quot; 映射按键,没有这个会拦截掉tab, 导致其他插件的tab不能用.</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_key_list_previous_completion</span> = [<span class="hljs-string">&#x27;&lt;c-p&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;Up&gt;&#x27;</span>]<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_complete_in_comments</span> = <span class="hljs-number">1</span>                          <span class="hljs-comment">&quot; 在注释输入中也能补全</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_complete_in_strings</span> = <span class="hljs-number">1</span>                           <span class="hljs-comment">&quot; 在字符串输入中也能补全</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_collect_identifiers_from_comments_and_strings</span> = <span class="hljs-number">1</span> <span class="hljs-comment">&quot; 注释和字符串中的文字也会被收入补全</span><br><span class="hljs-comment">&quot;let g:ycm_global_ycm_extra_conf=&#x27;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_global_ycm_extra_conf</span>=<span class="hljs-string">&#x27;~/.vim/plugged/YouCompleteMe/third_party/ycmd/cpp/.ycm_extra_conf.py&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_show_diagnostics_ui</span> = <span class="hljs-number">0</span>                           <span class="hljs-comment">&quot; 禁用语法检查</span><br><span class="hljs-keyword">inoremap</span> <span class="hljs-symbol">&lt;expr&gt;</span> <span class="hljs-symbol">&lt;CR&gt;</span> <span class="hljs-built_in">pumvisible</span>() ? <span class="hljs-string">&quot;\&lt;C-y&gt;&quot;</span> : <span class="hljs-string">&quot;\&lt;CR&gt;&quot;</span><br><span class="hljs-comment">&quot; 回车即选中当前项</span><br><span class="hljs-keyword">nnoremap</span> <span class="hljs-symbol">&lt;c-j&gt;</span> :YcmCompleter GoToDefinitionElseDeclaration<span class="hljs-symbol">&lt;CR&gt;</span><br><span class="hljs-comment">&quot; 跳转到定义处</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_min_num_of_chars_for_completion</span>=<span class="hljs-number">2</span>                 <span class="hljs-comment">&quot; 从第2个键入字符就开始罗列匹配项</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_key_invoke_completion</span> = <span class="hljs-string">&#x27;&lt;c-z&gt;&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:ycm_semantic_triggers</span> =  &#123;<br>\ <span class="hljs-string">&#x27;c,cpp,python,java,go,erlang,perl&#x27;</span>: [<span class="hljs-string">&#x27;re!\w&#123;2&#125;&#x27;</span>],<br>\ <span class="hljs-string">&#x27;cs,lua,javascript&#x27;</span>: [<span class="hljs-string">&#x27;re!\w&#123;2&#125;&#x27;</span>],<br>\ &#125;<br><br><span class="hljs-comment">&quot;------- Python-mode -------</span><br><span class="hljs-comment">&quot;开启警告</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_warnings</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;保存文件时自动删除无用空格</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_trim_whitespaces</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_options</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;显示允许的最大长度的列</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_options_colorcolumn</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;设置QuickFix窗口的最大，最小高度</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_quickfix_minheight</span> = <span class="hljs-number">3</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_quickfix_maxheight</span> = <span class="hljs-number">10</span><br><span class="hljs-comment">&quot;使用python3</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_python</span> = <span class="hljs-string">&#x27;python3&#x27;</span><br><span class="hljs-comment">&quot;使用PEP8风格的缩进</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_indent</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;取消代码折叠</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_folding</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;开启python-mode定义的移动方式</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_motion</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;启用python-mode内置的python文档，使用K进行查找</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_doc</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_doc_bind</span> = <span class="hljs-string">&#x27;K&#x27;</span><br><span class="hljs-comment">&quot;自动检测并启用virtualenv</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_virtualenv</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;不使用python-mode运行python代码</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_run</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;let g:pymode_run_bind = &#x27;&lt;Leader&gt;r&#x27;</span><br><span class="hljs-comment">&quot;不使用python-mode设置断点</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_breakpoint</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;let g:pymode_breakpoint_bind = &#x27;&lt;leader&gt;b&#x27;</span><br><span class="hljs-comment">&quot;启用python语法检查</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;修改后保存时进行检查</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_on_write</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;编辑时进行检查</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_on_fly</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_checkers</span> = [<span class="hljs-string">&#x27;pyflakes&#x27;</span>, <span class="hljs-string">&#x27;pep8&#x27;</span>]<br><span class="hljs-comment">&quot;发现错误时不自动打开QuickFix窗口</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_cwindow</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;侧边栏不显示python-mode相关的标志</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_lint_signs</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;let g:pymode_lint_todo_symbol = &#x27;WW&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_comment_symbol = &#x27;CC&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_visual_symbol = &#x27;RR&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_error_symbol = &#x27;EE&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_info_symbol = &#x27;II&#x27;</span><br><span class="hljs-comment">&quot;let g:pymode_lint_pyflakes_symbol = &#x27;FF&#x27;</span><br><span class="hljs-comment">&quot;启用重构</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;不在父目录下查找.ropeproject，能提升响应速度</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_lookup_project</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">&quot;光标下单词查阅文档</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_show_doc_bind</span> = <span class="hljs-string">&#x27;&lt;C-c&gt;d&#x27;</span><br><span class="hljs-comment">&quot;项目修改后重新生成缓存</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_regenerate_on_write</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;开启补全，并设置&lt;C-Tab&gt;为默认快捷键</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_completion</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_complete_on_dot</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_completion_bind</span> = <span class="hljs-string">&#x27;&lt;C-Tab&gt;&#x27;</span><br><span class="hljs-comment">&quot;&lt;C-c&gt;g跳转到定义处，同时新建竖直窗口打开</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_goto_definition_bind</span> = <span class="hljs-string">&#x27;&lt;C-c&gt;g&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_goto_definition_cmd</span> = <span class="hljs-string">&#x27;vnew&#x27;</span><br><span class="hljs-comment">&quot;重命名光标下的函数，方法，变量及类名</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_rename_bind</span> = <span class="hljs-string">&#x27;&lt;C-c&gt;rr&#x27;</span><br><span class="hljs-comment">&quot;重命名光标下的模块或包</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_rope_rename_module_bind</span> = <span class="hljs-string">&#x27;&lt;C-c&gt;r1r&#x27;</span><br><span class="hljs-comment">&quot;开启python所有的语法高亮</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_syntax</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_syntax_all</span> = <span class="hljs-number">1</span><br><span class="hljs-comment">&quot;高亮缩进错误</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_syntax_indent_errors</span> = <span class="hljs-variable">g:pymode_syntax_all</span><br><span class="hljs-comment">&quot;高亮空格错误</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:pymode_syntax_space_errors</span> = <span class="hljs-variable">g:pymode_syntax_all</span><br><br><span class="hljs-comment">&quot;------- vim-cpp-hilight ---</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_class_scope_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_member_variable_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_class_decl_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_experimental_simple_template_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_experimental_template_highlight</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:cpp_concepts_highlight</span> = <span class="hljs-number">1</span><br><br><span class="hljs-comment">&quot;------- Start -------------</span><br><span class="hljs-comment">&quot;let g:startify_custom_header = [</span><br><span class="hljs-comment">&quot;            \ &#x27;+------------------------------+&#x27;,</span><br><span class="hljs-comment">&quot;            \ &#x27;|                              |&#x27;,</span><br><span class="hljs-comment">&quot;            \ &#x27;|    Still waters run deep!    |&#x27;,</span><br><span class="hljs-comment">&quot;            \ &#x27;|                              |&#x27;,</span><br><span class="hljs-comment">&quot;            \ &#x27;+----------------+-------------+&#x27;,</span><br><span class="hljs-comment">&quot;            \]</span><br><span class="hljs-comment">&quot;let g:startify_custom_footer = [</span><br><span class="hljs-comment">&quot;            \ &#x27;+------------------------------+&#x27;,</span><br><span class="hljs-comment">&quot;            \ &#x27;|     Keep an open mind!       |&#x27;,</span><br><span class="hljs-comment">&quot;            \ &#x27;+----------------+-------------+&#x27;,</span><br><span class="hljs-comment">&quot;            \]</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:startify_files_number</span> = <span class="hljs-number">5</span><br><span class="hljs-comment">&quot;let g:startify_custom_indices = map(range(1,100), &#x27;string(v:val)&#x27;)</span><br><br><span class="hljs-comment">&quot;------- Taglist -----------</span><br><span class="hljs-comment">&quot;http://ctags.sourceforge.net/ to download ctags -&gt; unzip -&gt; add path</span><br><span class="hljs-comment">&quot;add Plug Taglist from github mirror</span><br><span class="hljs-keyword">let</span> Tlist_Use_Right_Window=<span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> Tlist_Inc_Winwidth=<span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> Tlist_File_Fold_Auto_Close=<span class="hljs-number">1</span><br><span class="hljs-keyword">let</span> Tlist_Exit_Onluwindow=<span class="hljs-number">1</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;F4&gt;</span> :TlistToggle<span class="hljs-symbol">&lt;cr&gt;</span><br><br><span class="hljs-comment">&quot;===================================</span><br><span class="hljs-comment">&quot;=== VIM-Plug ======================</span><br><span class="hljs-comment">&quot;===================================</span><br><span class="hljs-keyword">call</span> plug#begin(<span class="hljs-string">&#x27;~/.vim/plugged&#x27;</span>)<br>Plug <span class="hljs-string">&#x27;lyokha/vim-xkbswitch&#x27;</span>                 <span class="hljs-comment">&quot;neovim notsupport</span><br>Plug <span class="hljs-string">&#x27;DeXP/xkb-switch-win&#x27;</span>                  <span class="hljs-comment">&quot;neoivm norsupport</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline&#x27;</span><br>Plug <span class="hljs-string">&#x27;connorholyday/vim-snazzy&#x27;</span><br>Plug <span class="hljs-string">&#x27;preservim/nerdtree&#x27;</span><br>Plug <span class="hljs-string">&#x27;mbbill/undotree&#x27;</span><br>Plug <span class="hljs-string">&#x27;dense-analysis/ale&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline-themes&#x27;</span><br>Plug <span class="hljs-string">&#x27;Raimondi/delimitMate&#x27;</span><br>Plug <span class="hljs-string">&#x27;Chiel92/vim-autoformat&#x27;</span><br>Plug <span class="hljs-string">&#x27;preservim/nerdcommenter&#x27;</span><br><span class="hljs-comment">&quot;Plug &#x27;kien/rainbow_parentheses.vim&#x27;</span><br>Plug <span class="hljs-string">&#x27;luochen1990/rainbow&#x27;</span><br>Plug <span class="hljs-string">&#x27;godlygeek/tabular&#x27;</span><br>Plug <span class="hljs-string">&#x27;mzlogin/vim-markdown-toc&#x27;</span><br>Plug <span class="hljs-string">&#x27;plasticboy/vim-markdown&#x27;</span><br>Plug <span class="hljs-string">&#x27;iamcco/markdown-preview.nvim&#x27;</span>, &#123; <span class="hljs-string">&#x27;do&#x27;</span>: &#123; -&gt; mkdp#util#install() &#125; &#125;<br>Plug <span class="hljs-string">&#x27;ferrine/md-img-paste.vim&#x27;</span><br>Plug <span class="hljs-string">&#x27;lervag/vimtex&#x27;</span><br>Plug <span class="hljs-string">&#x27;python-mode/python-mode&#x27;</span>, &#123; <span class="hljs-string">&#x27;for&#x27;</span>: <span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;branch&#x27;</span>: <span class="hljs-string">&#x27;develop&#x27;</span> &#125;<br>Plug <span class="hljs-string">&#x27;octol/vim-cpp-enhanced-highlight&#x27;</span><br>Plug <span class="hljs-string">&#x27;mhinz/vim-startify&#x27;</span><br>Plug <span class="hljs-string">&#x27;dhruvasagar/vim-table-mode&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-scripts/taglist.vim&#x27;</span><br>Plug <span class="hljs-string">&#x27;ycm-core/YouCompleteMe&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-scripts/VimTweak&#x27;</span><br>Plug <span class="hljs-string">&#x27;mattn/transparency-windows-vim&#x27;</span><br><span class="hljs-keyword">call</span> plug#end()<br><br><span class="hljs-comment">&quot;===================================</span><br><span class="hljs-comment">&quot;=== Theme =========================</span><br><span class="hljs-comment">&quot;===================================</span><br><span class="hljs-keyword">colorscheme</span> snazzy<br></code></pre></td></tr></table></figure><p>同时可以访问我的GitHub上的<a href="https://github.com/KairuiLiu/vimrc_backup">Vim配置文件备份项目</a>，上面还有文中所有的配置文件</p><h1 id="16-Vim-在Linux下的配置"><a href="#16-Vim-在Linux下的配置" class="headerlink" title="16 Vim 在Linux下的配置"></a>16 Vim 在Linux下的配置</h1><p>与Windows配置大体相同，略做修改，吧Vim-Plug下的有win的插件删除，直接安装，注意的是部分插件的配置方法不同</p><ol><li><p>catag 不必下载解压略，之家Pacman安装即可</p></li><li><p>YCM 安装后进入Pluged - you… - 直接运行.&#x2F;install.py 不必下载VsBuild</p></li><li><p>XKB插件 将<font color="red"><code>Plug &#39;DeXP/xkb-switch-win&#39;</code></font>改为<font color="red"><code>Plug &#39;grwlf/xkb-switch&#39;</code></font>安装，进入Pluged - xkb - 运行如下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-keyword">cd</span> build<br>cmake ..<br><span class="hljs-keyword">make</span><br></code></pre></td></tr></table></figure><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo ldconfig<br>sudo make <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>看起来就像是代码没写完，略去略一堆，但是实际上就是这样的</p></li><li><p>字体设置那行删除掉</p></li><li><p>滚动设置删除</p></li><li><p>Linux下切换ESC与CapsLock</p></li></ol><p>在~&#x2F;.Xmodmap写入</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">! Swap caps <span class="hljs-keyword">lock</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">escape</span><br>remove <span class="hljs-keyword">Lock</span> = Caps_Lock<br>keysym <span class="hljs-keyword">Escape</span> = Caps_Lock<br>keysym Caps_Lock = <span class="hljs-keyword">Escape</span><br><span class="hljs-keyword">add</span> <span class="hljs-keyword">Lock</span> = Caps_Lock<br></code></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exec</span> xmodmap ~/.Xmodmap<br></code></pre></td></tr></table></figure><p>可以的话还要加入自启动</p><ol><li><p><a href="https://blog.csdn.net/tmjdone/article/details/5627239">KDE桌面的方法</a>，当然直接autostart加入.sh即可</p></li><li><p>i3wm的方法(后面会用到)<br>~&#x2F;.config&#x2F;i3&#x2F;config写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exec</span> xmodmap ~/.Xmodmap<br></code></pre></td></tr></table></figure></li></ol><hr><p><font color="red" size="4"><strong>谨记：Vim是一款工具，使用VIM是为了加快您的Coding效率的，不要配置比使用的时间还长</strong></font></p><hr><h1 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花~"></a>完结撒花~</h1><p>文章知识点与官方知识档案匹配，可进一步学习相关知识</p><hr><p>原文链接：<a href="https://blog.csdn.net/Liukairui/article/details/107392243">https://blog.csdn.net/Liukairui/article/details/107392243</a></p>]]></content>
    
    
    <categories>
      
      <category>编译器</category>
      
      <category>Vim</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安装</tag>
      
      <tag>部署</tag>
      
      <tag>转载</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
